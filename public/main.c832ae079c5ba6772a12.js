/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbuup"] = self["webpackChunkbuup"] || []).push([["main"],{

/***/ "./src/Main.js":
/*!*********************!*\
  !*** ./src/Main.js ***!
  \*********************/
/*! namespace exports */
/*! export updatePhysics [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updatePhysics\": () => /* binding */ updatePhysics\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/cannon.min.js */ \"./src/lib/cannon.min.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar dt = 1 / 20;\n\nfunction init(){\n\tinitCannon();\n\tlet canvas=_Render_js__WEBPACK_IMPORTED_MODULE_1__.init();\n\tdocument.querySelector('#main').appendChild(canvas)\n\n\n\twindow.addEventListener('click',function(ev){\n\t\t //for(let i=0; i<100; i++){\n\t            make()\n\t       // }\n\t})\n\n\n                makeRoom(40,120,80,10)\n\n\n\n}init();\n\nvar bodies;\nvar meshes;\nvar particles;\nvar bullets;\nvar world;\nvar playerBody;\nvar controls\nvar orientation=0;\n\n\nfunction initCannon(){\n\t\t\tlet N =1;\n\t\t\tbodies=[];\n\t\t\tmeshes=[];\n            particles=[];\n            bullets=[];\n\t\t\tcontrols={};\n            // Setup our world\n            world = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.World();\n            world.quatNormalizeSkip = 0;\n            world.quatNormalizeFast = false;\n\n            world.gravity.set(0,0,-10);\n            world.broadphase = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.NaiveBroadphase();\n\n            // Create boxes\n            let mass = 4, radius = 1.3;\n            let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(5,5,10));\n            for(let i=0; i<N; i++){\n                let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Body({ mass: mass });\n                boxBody.addShape(boxShape);\n                boxBody.position.set(0,0,60);\n                world.addBody(boxBody);\n                //boxBody.angularDamping=0.8 //really high\n                playerBody=boxBody\n                window.playerBody=playerBody\n                playerBody.angularDamping=1\n                //bodies.push(boxBody);\n            }\n\n\n\n            // Create a plane\n            /*let groundShape = new CANNON.Plane();\n            let c=40\n            let h=150\n            let points=[\n            new CANNON.Vec3(-c,-c,0),new CANNON.Vec3(-c,c,0),new CANNON.Vec3(c,c,0),new CANNON.Vec3(c,-c,0),\n            new CANNON.Vec3(-c,-c,h),new CANNON.Vec3(-c,c,h),new CANNON.Vec3(c,c,h),new CANNON.Vec3(c,-c,h)\n            ]\n            let faces=[[4,7,6,5]]//[[3,2,1,0],[4,5,0,1],[6,7,3,2],[0,3,7,4],[2,1,5,6],[4,7,6],[6,5,4]]//,  ,   [2,3,6,7]] //\n            let box = new CANNON.ConvexPolyhedron(points,faces);\n            */\n            /*let groundBody = new CANNON.Body({ mass: 0 });\n            groundBody.addShape(box);\n            groundBody.position.set(0,0,25)\n           // groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2);\n            world.addBody(groundBody);*/\n\n            // Joint body\n            /*let shape = new CANNON.Sphere(0.1);\n            let jointBody = new CANNON.Body({ mass: 0 });\n            jointBody.addShape(shape);\n            jointBody.collisionFilterGroup = 0;\n            jointBody.collisionFilterMask = 0;\n            world.addBody(jointBody)*/\n\n\n\n\n            window.addEventListener('keydown',ev=>{\n            \tconsole.log(ev.keyCode)\n            \tswitch(ev.keyCode){\n            \t\tcase 37: case 65: controls.left=true;orientation=1;break;//left\n            \t\tcase 39: case 68: controls.right=true;orientation=3;break;//right\n            \t\tcase 38: case 87:  controls.up=true;orientation=0;break;//up\n            \t\tcase 40: case 83: controls.down=true;orientation=2;break;//down\n            \t\tcase 32: make(); break;\n                    case 66: for(let ii=0;ii<12;ii++){make();} break;\n                    case 71: makeMan();break;\n            \t}\n\n            \t\n\n            })\n             window.addEventListener('keyup',ev=>{\n             \t\tswitch(ev.keyCode){\n            \t\tcase 37: case 65: controls.left=false;break;//left\n            \t\tcase 39: case 68: controls.right=false;break;//right\n            \t\tcase 38: case 87:  controls.up=false;break;//up\n            \t\tcase 40: case 83: controls.down=false;break;//down\n            \t}\n             })\n\n\n            \n        }\n        let count=0;\n\nfunction make(){\n    let fireSpeed=160;\n\n    let boxBody;\n    if(bullets.length>60){\n        boxBody=bullets.shift();\n        bullets.push(boxBody)\n    }else{\n\n\n\tlet size={x:4,y:4,z:4}\n\tlet boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(size.x/2,size.y/2,size.z/2));\n\tboxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Body({ mass: 2 });\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n\n    boxBody.bullet=true;\n\n    particles.push(boxBody)\n\n\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z);\n    meshes.push(cube)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\n    world.addBody(boxBody);\n\n\n}\n\n\n    let v=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\n    let speed=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\n\n    if(orientation==1){\n        v.x-=15;speed.x-=fireSpeed;\n        v.add({x:0,y:rand(2),z:rand(2)})\n    }\n    if(orientation==3){\n        v.x+=15;speed.x+=fireSpeed;\n        //playerBody.angularDamping=1\n                v.add({x:0,y:rand(2),z:rand(2)})\n\n    }\n\n    if(orientation==0){\n        v.y+=15;speed.y+=fireSpeed;\n        v.add({x:rand(2),y:0,z:rand(2)})\n\n\n    }\n    if(orientation==2){\n        v.y-=15;speed.y-=fireSpeed;\n        v.add({x:rand(2),y:0,z:rand(2)})\n\n    }\n\n\n    //v.applyQuaternion(Render.player.quaternion)\n   \tv.add(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position)\n   \tboxBody.position.copy(v)\n   \tboxBody.quaternion.copy(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion)\n\n   \t//speed.applyQuaternion(Render.player.quaternion)\n   \tboxBody.velocity.copy(speed)\n\n   \tlet opposite=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(-0.1*speed.x,-0.1*speed.y,-0.1*speed.z)\n   \t//opposite.applyQuaternion(Render.player.quaternion)\n   \topposite.add(playerBody.velocity);\n\n   \tplayerBody.velocity.copy(opposite)\n    \n\n    //boxBody.angularDamping=0.8 //really high\n    count++;\n\n}\nfunction makeBlood(p) {\nlet boxBody;\n    if(count>40){\n        boxBody=particles.shift();\n        particles.push(boxBody)\n    }else{\n\n    let size={x:4,y:4,z:4}\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(size.x/2,size.y/2,size.z/2));\n    boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Body({ mass: 0.1 });\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n\n    particles.push(boxBody)\n\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.blood);\n    meshes.push(cube)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\n    world.addBody(boxBody);\n    }\n    boxBody.position.copy(p.position)\n}\n\n\nfunction makeMan() {\n    let size={x:10,y:10,z:20}\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(size.x/2,size.y/2,size.z/2));\n    let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Body({ mass: 8 });\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n\n    boxBody.addEventListener(\"collide\",ev=>{\n        if(ev.body.bullet){\n           if(ev.body.velocity.length()>50){\n            makeBlood(boxBody)\n           }\n        }\n    })\n\n\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z);\n    meshes.push(cube)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\n    world.addBody(boxBody);\n\n}\nfunction applyQuaternion(v,q){ //ripped from threejs because i didnt feel like converting between cannojs types\n\n\n\t\tconst x = v.x, y = v.y, z = v.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tv.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tv.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tv.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn v;\n}\n\nfunction updatePhysics(){\n            /*bodies[0].position.set(point.x,point.y,point.z)\n            bodies[0].velocity.set(0,0,0)\n            bodies[0].angularDamping=1\n            bodies[0].inertia.set(0,0,0)*/\n\n            world.step(dt);\n\n            \n\n            for(var i=0; i !== meshes.length; i++){\n                meshes[i].position.copy(bodies[i].position);\n                meshes[i].quaternion.copy(bodies[i].quaternion);\n                if(bodies[i].position.z<-100){\n                \tbodies[i].position.set(Math.random()*80 -40,Math.random()*80 -40,100)\n\n                \tbodies[i].velocity.set(0,0,0)\n                }\n\n            }\n\n\n            if(controls.left){\n            \tif(playerBody.velocity.x>-40)\n            \t\t\tplayerBody.velocity.x-=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(0,0,1), Math.PI/2);\n\n            }else if(controls.right){\n            \tif(playerBody.velocity.x<40)\n            \t\t\tplayerBody.velocity.x+=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(0,0,1), 3*Math.PI/2);\n\n            }else if(controls.up){\n            \tif(playerBody.velocity.y<40)\n            \t\t\tplayerBody.velocity.y+=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(0,0,1), 0);\n\n            }else if(controls.down){\n            \tif(playerBody.velocity.y>-40)\n            \t\t\tplayerBody.velocity.y-=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(0,0,1), Math.PI);\n\n            }\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position.copy(playerBody.position);\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion.copy(playerBody.quaternion);\n            //console.log(Render.player.position)\n        }\n\nfunction makeRoom(w,d,h,t){\n    let body = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Body({ mass: 0 });\n\n    let xWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(t/2,d,h));\n    let yWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(w,t/2,h));\n    let zWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3(w,d,t/2));\n\n\n\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( -w, 0,h/2));\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( w, 0,h/2));\n\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( 0, -d,h/2));\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( 0, d,h/2));\n\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( 0, 0,h));\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_2__.Vec3( 0, 0,0));\n    world.addBody(body);\n\n    let xm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(t,d*2,h,-w,0,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\n    let xm2=xm.clone()\n    xm2.position.x=w;\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm)\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm2)\n\n    let ym=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,t,h,0,d,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(ym)\n\n    let zm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,d*2,t,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.ground);\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(zm)\n\n}\nfunction rand(x){\n    return (Math.random()*2 -1)*x\n}\n\n\n\n//# sourceURL=webpack://buup/./src/Main.js?");

/***/ }),

/***/ "./src/Render.js":
/*!***********************!*\
  !*** ./src/Render.js ***!
  \***********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements:  */
/***/ (() => {

eval("throw new Error(\"Module parse failed: Export 'yellow' is not defined (681:48)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n| \\n| \\n> export { init, addModel,cubic,wood,ground,blood,yellow, getAlphaCanvas, bufferPrint, loadModel, resize,player }\");\n\n//# sourceURL=webpack://buup/./src/Render.js?");

/***/ })

},
0,[["./src/Main.js","runtime","libs"]]]);