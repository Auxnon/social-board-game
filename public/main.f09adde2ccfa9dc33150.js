/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbuup"] = self["webpackChunkbuup"] || []).push([["main"],{

/***/ "./src/HexManager.js":
/*!***************************!*\
  !*** ./src/HexManager.js ***!
  \***************************/
/*! namespace exports */
/*! export init [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => /* binding */ init\n/* harmony export */ });\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n\n\n\n\nfunction init(){\n\n_Render_js__WEBPACK_IMPORTED_MODULE_0__.loadModel('./assets/models/Hex.glb',m=>{\n\tconsole.log('got children '+m.children.length)\n\tlet basicMat = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_1__.MeshBasicMaterial({ vertexColors: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_1__.VertexColors, metalness: 0, roughness: 1.0}); // \n\n\tfor(let i=0;i<m.children.length;i++){\n\t\t//Render.addModel(m.children[i])\n\t\t//m.children[i]\n\t\tlet mm=m.children[i]\n\t\t//m.children[i].scale.set(200,200,200)\n\t\tmm.rotation.x=Math.PI/2\n\t\tmm.position.set(0,0,60)\n\t\tmm.scale.set(20,20,20)\n    //mm.material= new THREE.MeshBasicMaterial( {color: 0x20E89F, side: THREE.FrontSide} );\n\n\t\tmm.material=basicMat\n\n\t}\n \t\n\t//window.m=m;//.children[0]\n})\n\n}\n\n\n\n//# sourceURL=webpack://buup/./src/HexManager.js?");

/***/ }),

/***/ "./src/Main.js":
/*!*********************!*\
  !*** ./src/Main.js ***!
  \*********************/
/*! namespace exports */
/*! export updatePhysics [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updatePhysics\": () => /* binding */ updatePhysics\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _HexManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HexManager.js */ \"./src/HexManager.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/cannon.min.js */ \"./src/lib/cannon.min.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar dt = 1 / 20;\n\n\n\nfunction init(){\n\tinitCannon();\n\tlet canvas=_Render_js__WEBPACK_IMPORTED_MODULE_1__.init();\n\tdocument.querySelector('#main').appendChild(canvas)\n\n\n\twindow.addEventListener('click',function(ev){\n\t\t //for(let i=0; i<100; i++){\n\t            make()\n\t       // }\n\t})\n\n\n    makeRoom(40,120,80,10)\n\n    _HexManager_js__WEBPACK_IMPORTED_MODULE_2__.init();\n\n\n\n}init();\n\nvar bodies;\nvar meshes;\nvar particles;\nvar bullets;\nvar world;\nvar playerBody;\nvar controls\nvar orientation=0;\n\nvar gooProperty;\nvar wallProperty;\n\n\nfunction initCannon(){\n\t\t\tlet N =1;\n\t\t\tbodies=[];\n\t\t\tmeshes=[];\n            particles=[];\n            bullets=[];\n\t\t\tcontrols={};\n            // Setup our world\n            world = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.World();\n            world.quatNormalizeSkip = 0;\n            world.quatNormalizeFast = false;\n\n            world.gravity.set(0,0,-10);\n            world.broadphase = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.NaiveBroadphase();\n\n            // Create boxes\n            let mass = 4, radius = 1.3;\n            let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(5,5,10));\n            for(let i=0; i<N; i++){\n                let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Body({ mass: mass });\n                boxBody.addShape(boxShape);\n                boxBody.position.set(0,0,60);\n                world.addBody(boxBody);\n                //boxBody.angularDamping=0.8 //really high\n                playerBody=boxBody\n                window.playerBody=playerBody\n                playerBody.angularDamping=1\n                //bodies.push(boxBody);\n            }\n\n\n\n            // Create a plane\n            /*let groundShape = new CANNON.Plane();\n            let c=40\n            let h=150\n            let points=[\n            new CANNON.Vec3(-c,-c,0),new CANNON.Vec3(-c,c,0),new CANNON.Vec3(c,c,0),new CANNON.Vec3(c,-c,0),\n            new CANNON.Vec3(-c,-c,h),new CANNON.Vec3(-c,c,h),new CANNON.Vec3(c,c,h),new CANNON.Vec3(c,-c,h)\n            ]\n            let faces=[[4,7,6,5]]//[[3,2,1,0],[4,5,0,1],[6,7,3,2],[0,3,7,4],[2,1,5,6],[4,7,6],[6,5,4]]//,  ,   [2,3,6,7]] //\n            let box = new CANNON.ConvexPolyhedron(points,faces);\n            */\n            /*let groundBody = new CANNON.Body({ mass: 0 });\n            groundBody.addShape(box);\n            groundBody.position.set(0,0,25)\n           // groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2);\n            world.addBody(groundBody);*/\n\n            // Joint body\n            /*let shape = new CANNON.Sphere(0.1);\n            let jointBody = new CANNON.Body({ mass: 0 });\n            jointBody.addShape(shape);\n            jointBody.collisionFilterGroup = 0;\n            jointBody.collisionFilterMask = 0;\n            world.addBody(jointBody)*/\n\n\n\n\n            window.addEventListener('keydown',ev=>{\n            \tconsole.log(ev.keyCode)\n            \tswitch(ev.keyCode){\n            \t\tcase 37: case 65: controls.left=true;orientation=1;break;//left\n            \t\tcase 39: case 68: controls.right=true;orientation=3;break;//right\n            \t\tcase 38: case 87:  controls.up=true;orientation=0;break;//up\n            \t\tcase 40: case 83: controls.down=true;orientation=2;break;//down\n            \t\tcase 32: make(); break;\n                    case 66: for(let ii=0;ii<12;ii++){make();} break;\n                    case 71: makeMan();break;\n            \t}\n\n            \t\n\n            })\n             window.addEventListener('keyup',ev=>{\n             \t\tswitch(ev.keyCode){\n            \t\tcase 37: case 65: controls.left=false;break;//left\n            \t\tcase 39: case 68: controls.right=false;break;//right\n            \t\tcase 38: case 87:  controls.up=false;break;//up\n            \t\tcase 40: case 83: controls.down=false;break;//down\n            \t}\n             })\n            gooProperty = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Material({name: \"gooProperty\",friction: 10.0,restitution:-1.0});\n            gooProperty.name=\"gooProperty\"\n            //gooProperty.friction=1\n\n            wallProperty = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Material({name: \"wallProperty\",friction: 0.1,restitution:1});\n            wallProperty.name=\"wallProperty\"\n            //debugger\n             /*var gooWallPhysics = new CANNON.ContactMaterial(gooProperty,\n                                                                     wallProperty,\n                                                                     1, // friction coefficient\n                                                                     0  // restitution\n                                                                     );*/\n             // We must add the contact materials to the world\n             //world.addContactMaterial(gooWallPhysics);\n\n\n            \n        }\n        let count=0;\n\nfunction make(){\n    let fireSpeed=160;\n\n    let boxBody;\n    if(bullets.length>30){\n        boxBody=bullets.shift();\n        bullets.push(boxBody)\n        //boxBody.arrayIndex=\n                            boxBody.collisionResponse=true;\n                    boxBody.wakeUp();\n\n\n    }else{\n\n\n\tlet size={x:4,y:4,z:4}\n\tlet boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(size.x/2,size.y/2,size.z/2));\n\tboxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Body({ mass: 2 });\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n\n    boxBody.bullet=true;\n\n    bullets.push(boxBody)\n\n\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.yellow);\n    meshes.push(cube)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\n    world.addBody(boxBody);\n\n\n}\n\n\n    let v=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\n    let speed=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\n\n    if(orientation==1){\n        v.x-=15;speed.x-=fireSpeed;\n        v.add({x:0,y:rand(2),z:rand(2)})\n    }\n    if(orientation==3){\n        v.x+=15;speed.x+=fireSpeed;\n        v.add({x:0,y:rand(2),z:rand(2)})\n    }\n\n    if(orientation==0){\n        v.y+=15;speed.y+=fireSpeed;\n        v.add({x:rand(2),y:0,z:rand(2)})\n\n\n    }\n    if(orientation==2){\n        v.y-=15;speed.y-=fireSpeed;\n        v.add({x:rand(2),y:0,z:rand(2)})\n\n    }\n\n\n    //v.applyQuaternion(Render.player.quaternion)\n   \tv.add(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position)\n   \tboxBody.position.copy(v)\n   \tboxBody.quaternion.copy(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion)\n\n   \t//speed.applyQuaternion(Render.player.quaternion)\n   \tboxBody.velocity.copy(speed)\n\n   \tlet opposite=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(-0.1*speed.x,-0.1*speed.y,-0.1*speed.z)\n   \t//opposite.applyQuaternion(Render.player.quaternion)\n   \topposite.add(playerBody.velocity);\n\n   \tplayerBody.velocity.copy(opposite)\n    \n\n    //boxBody.angularDamping=0.8 //really high\n    count++;\n\n}\nfunction makeBlood(p,v) {\nlet boxBody;\n    if(count>100){\n        boxBody=particles.shift();\n        particles.push(boxBody)\n        boxBody.collisionResponse=true;\n    }else{\n\n    let size={x:4,y:4,z:4}\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(size.x/2,size.y/2,size.z/2));\n    boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Body({ mass: 0.01 ,material: gooProperty});\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n\n    particles.push(boxBody)\n\n    //let cube=Render.cubic(size.x,size.y,size.z,0,0,0,Render.blood);\n    let sphere=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.SphereGeometry(3.5,5,3)\n    let orb = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh( sphere, _Render_js__WEBPACK_IMPORTED_MODULE_1__.blood );\n    meshes.push(orb)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(orb)\n    world.addBody(boxBody);\n    }\n    boxBody.position.copy(p.position)\n    if(v)\n        boxBody.velocity.copy(v)\n\n    boxBody.addEventListener(\"collide\",ev=>{\n        if(ev.body.material){\n            if(ev.body.material.name=='wallProperty'){\n           boxBody.collisionResponse=false;\n           boxBody.sleep();\n         }\n        }\n    })\n\n}\n\n\nfunction makeMan() {\n    let size={x:10,y:10,z:20}\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(size.x/2,size.y/2,size.z/2));\n    let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Body({ mass: 8 });\n    boxBody.addShape(boxShape);\n    bodies.push(boxBody);\n    boxBody.angularDamping=1\n\n\n    boxBody.addEventListener(\"collide\",ev=>{\n        if(ev.body.bullet){\n           if(ev.body.velocity.length()>50){\n            boxBody.angularDamping=0.01\n            console.log('sht')\n            makeBlood(boxBody,ev.body.velocity)\n           }\n        }\n    })\n\n\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z);\n    meshes.push(cube)\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\n    world.addBody(boxBody);\n\n}\nfunction applyQuaternion(v,q){ //ripped from threejs because i didnt feel like converting between cannojs types\n\n\n\t\tconst x = v.x, y = v.y, z = v.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tv.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tv.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tv.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn v;\n}\n\nfunction updatePhysics(){\n            /*bodies[0].position.set(point.x,point.y,point.z)\n            bodies[0].velocity.set(0,0,0)\n            bodies[0].angularDamping=1\n            bodies[0].inertia.set(0,0,0)*/\n\n            world.step(dt);\n\n            \n\n            for(var i=0; i !== meshes.length; i++){\n                meshes[i].position.copy(bodies[i].position);\n                meshes[i].quaternion.copy(bodies[i].quaternion);\n                if(bodies[i].position.z<-100){\n                \tbodies[i].position.set(Math.random()*80 -40,Math.random()*80 -40,100)\n\n                \tbodies[i].velocity.set(0,0,0)\n                    bodies[i].collisionResponse=false;\n                    bodies[i].sleep();\n                }\n\n            }\n\n\n            if(controls.left){\n            \tif(playerBody.velocity.x>-40)\n            \t\t\tplayerBody.velocity.x-=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(0,0,1), Math.PI/2);\n\n            }else if(controls.right){\n            \tif(playerBody.velocity.x<40)\n            \t\t\tplayerBody.velocity.x+=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(0,0,1), 3*Math.PI/2);\n\n            }else if(controls.up){\n            \tif(playerBody.velocity.y<40)\n            \t\t\tplayerBody.velocity.y+=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(0,0,1), 0);\n\n            }else if(controls.down){\n            \tif(playerBody.velocity.y>-40)\n            \t\t\tplayerBody.velocity.y-=4\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(0,0,1), Math.PI);\n\n            }\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position.copy(playerBody.position);\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion.copy(playerBody.quaternion);\n            //console.log(Render.player.position)\n        }\n\nfunction makeRoom(w,d,h,t){\n    let body = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Body({ mass: 0 ,material: wallProperty});\n\n    let xWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(t/2,d,h));\n    let yWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(w,t/2,h));\n    let zWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3(w,d,t/2));\n\n\n\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( -w, 0,h/2));\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( w, 0,h/2));\n\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( 0, -d,h/2));\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( 0, d,h/2));\n\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( 0, 0,h));\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_3__.Vec3( 0, 0,0));\n    world.addBody(body);\n\n    let xm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(t,d*2,h,-w,0,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\n    let xm2=xm.clone()\n    xm2.position.x=w;\n\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm)\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm2)\n\n    let ym=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,t,h,0,d,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(ym)\n\n    let zm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,d*2,t,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.ground);\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(zm)\n\n}\nfunction rand(x){\n    return (Math.random()*2 -1)*x\n}\n\n\n\n//# sourceURL=webpack://buup/./src/Main.js?");

/***/ }),

/***/ "./src/Render.js":
/*!***********************!*\
  !*** ./src/Render.js ***!
  \***********************/
/*! namespace exports */
/*! export addModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addModel2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export blood [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bufferPrint [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cubic [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getAlphaCanvas [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ground [provided] [no usage info] [missing usage info prevents renaming] */
/*! export init [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export player [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export wood [provided] [no usage info] [missing usage info prevents renaming] */
/*! export yellow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => /* binding */ init,\n/* harmony export */   \"addModel\": () => /* binding */ addModel,\n/* harmony export */   \"addModel2\": () => /* binding */ addModel2,\n/* harmony export */   \"cubic\": () => /* binding */ cubic,\n/* harmony export */   \"wood\": () => /* binding */ wood,\n/* harmony export */   \"ground\": () => /* binding */ ground,\n/* harmony export */   \"blood\": () => /* binding */ blood,\n/* harmony export */   \"yellow\": () => /* binding */ yellow,\n/* harmony export */   \"getAlphaCanvas\": () => /* binding */ getAlphaCanvas,\n/* harmony export */   \"bufferPrint\": () => /* binding */ bufferPrint,\n/* harmony export */   \"loadModel\": () => /* binding */ loadModel,\n/* harmony export */   \"resize\": () => /* binding */ resize,\n/* harmony export */   \"player\": () => /* binding */ player\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Main.js */ \"./src/Main.js\");\n/* harmony import */ var _lib_GLTFLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/GLTFLoader.js */ \"./src/lib/GLTFLoader.js\");\n/* harmony import */ var _lib_EffectComposer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/EffectComposer.js */ \"./src/lib/EffectComposer.js\");\n/* harmony import */ var _lib_ShaderPass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/ShaderPass.js */ \"./src/lib/ShaderPass.js\");\n/* harmony import */ var _lib_SSAOPass_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/SSAOPass.js */ \"./src/lib/SSAOPass.js\");\n\n\n\n\n\n\n\n\n\n\n//import * as Control from \"./Control.js?v=16\";\n//import * as World from \"./World.js?v=16\";\n//import {OrbitControls} from \"./lib/OrbitControls.js\";\n//import * as Texture from \"./Texture.js?v=16\";\n//import * as Stats from \"./lib/stats.js\";\n//import * as AssetManager from \"./AssetManager.js?v=16\";\n//import * as Experiment from \"./Experiment.js?v=16\";\n\n\nvar camera, renderer;\n\nvar docWidth, docHeight;\n\nvar loader;\nvar mixer;\n\nvar SHADOW_SIZE = 2048;\nvar SIZE_DIVIDER = 8;\n\nvar alphaCanvas;\n\n\nvar activeCanvas;\n\nvar composer;\n\nvar specterMaterial;\nvar defaultMat\n\nvar scene\nvar group\n\nvar player;\nvar wood;\nvar ground;\nvar blood;\nvar yellow;\n\n\n\n\nfunction init() {\n\n     \n\n    camera = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 5000);\n    camera.position.z = 100; //400\n    camera.position.y = -200; //-800\n    camera.up = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1)\n\n    camera.lookAt(new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 100, 0));\n\n    scene= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene();\n    activeScene = scene;\n\n    alphaCanvas = document.createElement('div');\n    alphaCanvas.classList.add('canvasHolder');\n\n\n\n    renderer = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer({  antialias: true }); //alpha: true,\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PCFSoftShadowMap;\n\n    renderer.setClearColor(0xFF7F32, 1); //0xb0e9fd,1);//0xb0e9fd,1)\n\n    alphaCanvas.appendChild(renderer.domElement);\n\n    loader = new _lib_GLTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader();\n\n    initCustomMaterial();\n\n    activeCanvas = alphaCanvas;\n\n\n\n    resize();\n\n\n    composer = new _lib_EffectComposer_js__WEBPACK_IMPORTED_MODULE_3__.EffectComposer(renderer);\n    //var luminosityPass = new ShaderPass(LuminosityShader);\n    //composer.addPass(luminosityPass);\n    let ssaoPass = new _lib_SSAOPass_js__WEBPACK_IMPORTED_MODULE_5__.SSAOPass( scene, camera, 300, 200);\n    ssaoPass.kernelRadius = 6;\n    ssaoPass.minDistance=0.00015;\n    ssaoPass.maxDistance=0.001;\n    composer.addPass( ssaoPass );\n    window.ssao=ssaoPass\n\n\n\n    let material= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color:0x75D5CE});\n\n    wood= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0x20E89F, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n    ground= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0x5471A5, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n    let guyMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xEAF722, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n    defaultMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xCF2ADE, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n    blood= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xB60B0B, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n    yellow= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xEAF722, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n\n\n    //material = new THREE.MeshBasicMaterial( {color: new THREE.Color(\"white\")} );\n    /*geometry = new THREE.BoxBufferGeometry( 100, 100, 100 );\n    cube = new THREE.Mesh( geometry, material );\n    cube.position.z=50;\n    scene.add( cube );*/\n    group = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group();\n\n/*\n    group.add(cubic(10,100,50,-50,0,50,wood));\n    group.add(cubic(10,100,50,50,0,50,wood));\n    group.add(cubic(100,10,50,0,50,50,wood));\n    group.add(cubic(100,100,10,0,0,20,ground));*/\n\n    player=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group();\n    let whiteMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xFFFFFF, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n\n    let blackMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0x321818, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\n\n\n    let p1=cubic(10,10,20,0,0,0,guyMat);\n    let p2=cubic(10,2,10,0,5,5,whiteMat)\n    let p3=cubic(3,2,3,0,6,5,blackMat)\n\n    player.add(p1)\n    player.add(p2)\n    player.add(p3)\n    group.add(player)\n\n    scene.add(group)\n\n\n    animate();\n    return alphaCanvas\n\n\n}\n\nfunction getAlphaCanvas() {\n    return alphaCanvas;\n}\n\nfunction loadModel(model, callback, texture, color) {\n    loader.load(\n        ('./' + model), //villager22.gltf',\n        (gltf) => {\n            // called when the resource is loaded\n            //gltf.scene.scale.set(10,10,10);\n            let model; //=gltf.scene.children[0];\n            gltf.scene.rotation.x = Math.PI / 2;\n            gltf.scene.traverse(function(child) {\n                if(child instanceof _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh) {\n                    //if(child.name==\"Cube\"){\n                    model = child;\n                    if(!texture) {\n                        if(color)\n                            child.material = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: color, metalness: 0, roughness: 1.0 }); // \n                        else\n                            child.material = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ vertexColors: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.VertexColors, metalness: 0, roughness: 1.0}); // \n\n                        child.material.needsUpdate = true;\n                        //child.material.skinning=true;\n                    }\n                    //child.material.morphTargets=true;\n\n                    //child.material.map.needsUpdate = true;\n                    // }else{\n\n                    //}\n                }\n            });\n            //gltf.scene.children[0].children[1].scale.set(20,20,20);\n            //gltf.scene.children.pop();\n            //let mixer = new THREE.AnimationMixer( gltf.scene );\n            //model=gltf.scene.children[0]\n            let m2 = gltf.scene.children[0];\n            if(model) {\n                var animations = gltf.animations;\n                if(animations && animations.length) {\n\n                    mixer = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.AnimationMixer(model);\n                    for(var i = 0; i < animations.length; i++) {\n                        var animation = animations[i];\n                        // There's .3333 seconds junk at the tail of the Monster animation that\n                        // keeps it from looping cleanly. Clip it at 3 seconds\n\n                        //if ( sceneInfo.animationTime ) {\n                        //    animation.duration = sceneInfo.animationTime;\n\n\n                        // }\n                        action = mixer.clipAction(animation);\n                        //action.setEffectiveTimeScale(200);\n                        //action.timeScale=0.002;\n                        action.timeScale = 0.002;\n                        //if ( state.playAnimation ) \n                        action.play();\n                    }\n                }\n                //mainScene.add( gltf.scene.children[0] );\n            }\n            callback(gltf.scene);\n        },\n        (xhr) => {\n            // called while loading is progressing\n            console.log(`${( xhr.loaded / xhr.total * 100 )}% loaded`);\n        },\n        (error) => {\n            // called when loading has errors\n            console.error('An error happened', error);\n        },\n    );\n}\n\nfunction resize() {\n    //Math.max(window.screen.width, window.innerWidth)\n    //Math.max(window.screen.height, window.innerHeight)\n    if(window.screen.width> window.innerWidth){\n        docWidth =  window.innerWidth\n        docHeight = window.innerHeight\n    }else{\n        docWidth =  window.screen.width\n        docHeight = window.screen.height\n    }\n\n    //docWidth =  window.innerWidth //Math.max(window.screen.width, window.innerWidth)\n    //docHeight = window.innerHeight //Math.max(window.screen.height, window.innerHeight)//window.innerHeight;\n    camera.aspect = docWidth / docHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setPixelRatio(0.5);//window.devicePixelRatio / SIZE_DIVIDER);\n    renderer.setSize(docWidth, docHeight);\n}\n\nvar dir=1;\nfunction animate(time) {\n\t_Main_js__WEBPACK_IMPORTED_MODULE_1__.updatePhysics();\n    group.rotation.z+=0.002*dir;\n    if(group.rotation.z>Math.PI/16)\n    \tdir=-1;\n    else if(group.rotation.z<-Math.PI/16)\n    \tdir=1;\n    renderer.render(scene, camera);\n    composer.render();\n    requestAnimationFrame(animate);\n}\n\nfunction dumpImage(img) {\n    let dom = document.querySelector('#afterImage');\n    if(dom)\n        dom.setAttribute('src', img);\n}\n\nfunction bufferPrint() {\n    //_grabImage=true;\n    renderer.render(getScene(), camera);\n    dumpImage(renderer.domElement.toDataURL());\n}\n\nvar anchors = [];\n\nfunction addAnchor(host, bubble) {\n    let anchor = {\n        host: host,\n        bubble: bubble,\n        x: 0,\n        y: 0,\n        offset: 0,\n    }\n    anchors.forEach(a => {\n        if(a.host == host) {\n            a.offset -= 40;\n        }\n    })\n    anchors.push(anchor);\n    console.log(anchors.length + ' anchors');\n    updateAnchor(anchor, anchors.length - 1);\n    return anchor;\n}\n\nfunction updateAnchor(anchor, index) {\n    if(!anchor.bubble) {\n        anchors.splice(index, 1);\n        return false;\n    }\n    if(anchor.host) {\n        let vector = projectVector(anchor.host);\n        anchor.bubble.style.left = -16 + vector.x + 'px';\n        anchor.bubble.style.top = (40 + anchor.offset + vector.y) + 'px';\n        anchor.x = vector.x;\n        anchor.y = vector.y;\n    }\n\n}\n\nfunction roundEdge(x) {\n    x = x % (Math.PI)\n    if(x < 0)\n        x += Math.PI * 2;\n\n    if(x > Math.PI / 4) {\n        if(x > 5 * Math.PI / 4) {\n            if(x < 7 * Math.PI / 4) {\n                return Math.PI * 3 / 2;\n            }\n        } else {\n            if(x > 3 * Math.PI / 4) {\n                return Math.PI;\n            } else {\n                return Math.PI / 2;\n            }\n        }\n    }\n    return 0;\n}\n\nfunction syncModel(index, obj) {\n    let m = modelsIndexed[index];\n    m.position.x = obj.x;\n    m.position.y = obj.y;\n    m.position.z = obj.z;\n}\n\nfunction createModel(index) {\n    let model = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(cubeGeometry, cubeMaterial);\n    modelsIndexed[index] = model;\n    return model;\n}\nfunction addModel(model){\n\tgroup.add(model)\n}\nfunction addModel2(model){\n\tscene.add(model)\n}\nfunction cubic(i,j,k,x,y,z,c){\n     let geometry = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BoxBufferGeometry( i,j,k );\n     if(!c)\n    \tc=defaultMat\n\n    let cube = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh( geometry, c );\n    \n\n     cube.position.x=x?x:0;\n     cube.position.y=y?y:0;\n     cube.position.z=z?z:0;\n     return cube;\n}\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = Math.random() > 0.5 ? 0x66B136 : 0x76610E;\n    return parseInt(color);\n}\n\nfunction applyCursor() {\n    if(Control.down()) {\n        pointer.material = pointerMatOn;\n    } else\n        pointer.material = pointerMat;\n    var vector = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    vector.set((Control.screenX() / window.innerWidth) * 2 - 1, -(Control.screenY() / window.innerHeight) * 2 + 1, 0.5);\n    vector.unproject(camera)\n    var dir = vector.sub(camera.position).normalize();\n    var distance = -camera.position.z / dir.z;\n    var pos = camera.position.clone().add(dir.multiplyScalar(distance));\n\n    pointer.position.x = pos.x;\n    pointer.position.y = pos.y\n    Control.setVector(pointer.position);\n\n}\n\nfunction projectVector(object) {\n\n    var width = docWidth,\n        height = docHeight;\n    var widthHalf = width / 2,\n        heightHalf = height / 2;\n\n    let vector = object.position.clone();\n    vector.z += 30\n    //vector.applyMatrix4(object.matrixWorld);\n    vector.project(camera)\n\n    //var projector = new THREE.Projector();\n    //projector.projectVector( vector.setFromMatrixPosition( object.matrixWorld ), camera );\n\n    vector.x = (vector.x * widthHalf) + widthHalf;\n    vector.y = -(vector.y * heightHalf) + heightHalf;\n    return vector;\n\n}\n\n\nvar specterMaterial\n\nfunction initCustomMaterial() {\n\n    var meshphysical_frag = `\n    #define STANDARD\n#ifdef PHYSICAL\n    #define REFLECTIVITY\n    #define CLEARCOAT\n    #define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n    uniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n    uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n    uniform float clearcoat;\n    uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n    uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n    varying vec3 vNormal;\n    #ifdef USE_TANGENT\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n    #endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n    #include <clipping_planes_fragment>\n    vec4 diffuseColor = vec4( diffuse, opacity );\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n    vec3 totalEmissiveRadiance = emissive;\n    #include <logdepthbuf_fragment>\n    #include <map_fragment>\n    #include <color_fragment>\n    #include <alphamap_fragment>\n    #include <alphatest_fragment>\n    #include <roughnessmap_fragment>\n    #include <metalnessmap_fragment>\n    #include <normal_fragment_begin>\n    #include <normal_fragment_maps>\n    #include <clearcoat_normal_fragment_begin>\n    #include <clearcoat_normal_fragment_maps>\n    #include <emissivemap_fragment>\n    #include <lights_physical_fragment>\n    #include <lights_fragment_begin>\n    #include <lights_fragment_maps>\n    #include <lights_fragment_end>\n    #include <aomap_fragment>\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n    #ifdef TRANSPARENCY\n        diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n    #endif\n    gl_FragColor = vec4( outgoingLight,1.-(((0.2125 * outgoingLight.r) + (0.7154 * outgoingLight.g) + (0.0721 * outgoingLight.b)) ) );\n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n    #include <fog_fragment>\n    #include <premultiplied_alpha_fragment>\n    #include <dithering_fragment>\n}`\n\n    //gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\n    /*\n    #ifdef USE_COLOR\n                if(vColor==vec3(0,0,1))\n                    diffuseColor.rgb *= vec3(1,0,0);\n                else\n                    diffuseColor.rgb *= vColor;\n        #endif*/\n\n    //    #include <color_vertex>\n\n    var meshphysical_vert = `#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n    varying vec3 vNormal;\n    #ifdef USE_TANGENT\n        varying vec3 vTangent;\n        varying vec3 vBitangent;\n    #endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform vec3 shirt;\nuniform vec3 wind;\n\nvoid main() {\n    #include <uv_vertex>\n    #include <uv2_vertex>\n    #ifdef USE_COLOR\n        if(color==vec3(0,0,1))\n            vColor.xyz = shirt;\n        else\n            vColor.xyz = color.xyz;\n        \n    #endif\n    #include <beginnormal_vertex>\n    #include <morphnormal_vertex>\n    #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n    vNormal = normalize( transformedNormal );\n    #ifdef USE_TANGENT\n        vTangent = normalize( transformedTangent );\n        vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n    #endif\n#endif\n    #include <begin_vertex>\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n\n    \n        if(color==vec3(1,0,0)){\n            float val=max(0.0, 1.0976 - transformed.z);\n            transformed.xyz+=val*wind;\n            transformed.y*=1.0+sin((wind.z+transformed.z)*4.0)/2.0;\n\n        }\n    \n\n    #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n    vViewPosition = - mvPosition.xyz;\n    #include <worldpos_vertex>\n    #include <shadowmap_vertex>\n    #include <fog_vertex>\n}`\n\n    var uniforms = _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.UniformsUtils.merge(\n        [_lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderLib.standard.uniforms,\n            //{shirt: {value:new THREE.Vector3(0,1,0)},\n            //wind: {value:new THREE.Vector3(0,0,0)}}\n        ]\n    );\n\n    /*specterMaterial =  new THREE.ShaderMaterial({\n    uniforms: uniforms,\n    fragmentShader: fragmentShader(),\n    vertexShader: vertexShader(),\n  })**/\n\n\n    specterMaterial = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({\n        uniforms: uniforms,\n        derivatives: false,\n        lights: true,\n        vertexColors: true,\n        vertexShader: meshphysical_vert,\n        fragmentShader: meshphysical_frag,\n        roughness: 0.0,\n        metalness: 1.0,\n        //vertexShader: THREE.ShaderChunk.cube_vert,\n        //fragmentShader: THREE.ShaderChunk.cube_frag\n    });\n\n}\n/////SCENE///////\n\nvar emptyScene;\nvar scenes;\n\n\n\nfunction sceneInit() {\n    emptyScene = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene();\n    scenes = [];\n\n    let cubeGeometry = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BoxBufferGeometry(20, 20, 20);\n    let cubeMaterial = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xff8833 }); //map: texture\n\n    /*\n      var geometry = new THREE.SphereGeometry( 5, 32, 32 );\n      var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n      var sphere = new THREE.Mesh( geometry, material );\n\n      sphere.position.set(0,0,-30);\n      cubes.push(sphere);\n      scenes[2].add(sphere);\n      var geo = new THREE.OctahedronGeometry( 30, 1 );\n      var mat = new THREE.MeshBasicMaterial( {color: 0xC92DD1} ); \n      var octa= new THREE.Mesh( geo, mat );\n      octa.position.set(0,0,20);\n      cubes.push(octa);\n      scenes[3].add(octa);*/\n}\n\n\n\nfunction flipScene(i) {\n    activeScene = i;\n}\nvar activeScene = 0;\nvar activeModule;\n/*\nfunction getScene() {\n    let index = activeScene;\n    let scene = scenes[index];\n    if(scene == undefined) {\n        scene = emptyScene\n        scenes[index] = 'pend';\n\n        //wow this is a conufsing mess but it's functional!\n        let importerFunction = SCENE_IMPORT[index];\n        if(importerFunction) {\n            Main.pendApp(index)\n            importerFunction(module => {\n                scenes[index] = [module.init(index,()=>{Main.clearPendApp(index)},Main.apps[index]), module]\n                \n            });\n        } else {\n            scenes[index] = [emptyScene, undefined]\n        }\n\n    \n    } else if(scene == 'pend') {\n        scene = emptyScene;\n    } else {\n        activeModule = scene[1]; //define the module that's currently active so we can run it's animate function in sceneAnimate()\n        scene = scene[0] //please forgive me, trust me it works\n    }\n\n    return scene;\n}*/\n\n///////////////\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://buup/./src/Render.js?");

/***/ })

},
0,[["./src/Main.js","runtime","libs"]]]);