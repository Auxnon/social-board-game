/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbuup"] = self["webpackChunkbuup"] || []).push([["main"],{

/***/ "./src/Control.js":
/*!************************!*\
  !*** ./src/Control.js ***!
  \************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements:  */
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected token (631:1)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n| \\n| export {init,x,y,z,pos,down,animate,onClick,setVector,screenX,screenY,initRadial,menu1,defineOrbital,isMenuLocked,lockMenu,getAngle\\n> \\taddConfetti,setRenderer,enterVR,isVR,getVRPointer}\");\n\n//# sourceURL=webpack://buup/./src/Control.js?");

/***/ }),

/***/ "./src/Environment.js":
/*!****************************!*\
  !*** ./src/Environment.js ***!
  \****************************/
/*! namespace exports */
/*! export animate [provided] [no usage info] [missing usage info prevents renaming] */
/*! export changeShadowScale [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWind [provided] [no usage info] [missing usage info prevents renaming] */
/*! export init [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLightHelper [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setShadows [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => /* binding */ init,\n/* harmony export */   \"getWind\": () => /* binding */ getWind,\n/* harmony export */   \"animate\": () => /* binding */ animate,\n/* harmony export */   \"changeShadowScale\": () => /* binding */ changeShadowScale,\n/* harmony export */   \"setShadows\": () => /* binding */ setShadows,\n/* harmony export */   \"setLightHelper\": () => /* binding */ setLightHelper\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n\r\n\r\nvar wind;\r\n\r\nvar debugLightHelper;\r\nvar sunLight;\r\nvar sunLight2;\r\nvar sunTarget;\r\nvar ambientLight;\r\n\r\nvar SHADOW_SIZE=1024;//2048*16;\r\n\r\nlet pi2=Math.PI*2;\r\n\r\nlet tempHeight=20;\r\nlet tempD=-0.04; //-0.004\r\n\r\nfunction init(){\r\n \r\n\twind=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(1,0,0);\r\n\r\n\r\n\tambientLight = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.AmbientLight( 0x8F8F8F ); // soft white light  0x404040\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel2( ambientLight );\r\n\r\n\t//var directionalLight = new THREE.PointLight( 0xffffff, 1,100 );\r\n\tsunLight = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.DirectionalLight( 0xE05757, 0.5 ); //DirectionalLight\r\n\tsunLight.position.set(0,250,0);\r\n\tsunLight.castShadow = true;\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel2( sunLight );\r\n\tsunTarget=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Object3D();\r\n\tsunTarget.position.set(20,0,20);\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel2( sunTarget );\r\n\tsunLight.target=sunTarget;\r\n\r\n\r\n\tsunLight.shadow.mapSize.width = SHADOW_SIZE;  // default\r\n\tsunLight.shadow.mapSize.height = SHADOW_SIZE; // default\r\n\tsunLight.shadow.camera.near = 1;    // default\r\n\t    // default\r\n\t\r\n\tchangeShadowScale(0);\r\n\r\n\tsunLight.shadow.radius = 2.2;//2.2;\r\n\tsunLight.shadow.bias = -.0005;\r\n\r\n\tsunLight2=sunLight.clone();\r\n\tsunLight2.shadow.mapSize.width = 256;//256;  // default\r\n\tsunLight2.shadow.mapSize.height = 256;//256; // default\r\n\tsunLight2.shadow.radius = 0;\r\n\r\n\tsunLight2.visible=false;\r\n\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel2(sunLight2);\r\n\r\n\t\r\n\r\n\twindow.sunLight=sunLight;\r\n\t//setLightHelper(true)\r\n\r\n}\r\n\r\nfunction changeShadowScale(factor){\r\n\tlet d1;\r\n\r\n\tif(factor==1){\r\n\t\td1 = 450;\r\n\t\tsunLight.shadow.camera.far = 600; \r\n\t\tsunLight.shadow.mapSize.width = SHADOW_SIZE/2;\r\n\t\tsunLight.shadow.mapSize.height= SHADOW_SIZE/2;\r\n\t}else{\r\n\t\td1 = 150;\r\n\t\tsunLight.shadow.mapSize.width = SHADOW_SIZE;\r\n\t\tsunLight.shadow.mapSize.height= SHADOW_SIZE;\r\n\t\tsunLight.shadow.camera.far = 300; \r\n\t}\r\n\r\n\tsunLight.shadow.camera.left = -d1;\r\n\tsunLight.shadow.camera.right = d1;\r\n\tsunLight.shadow.camera.top = d1;\r\n\tsunLight.shadow.camera.bottom = -d1;\r\n\tif(sunLight.shadow.map){\r\n\t\tsunLight.shadow.map.dispose()\r\n\t\tsunLight.shadow.map = null\r\n\t}\r\n\r\n\tif(debugLightHelper){\r\n\t\tsetTimeout(function(){\r\n\t\t\tdebugLightHelper.update();\r\n\t\t},1000)\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\nfunction cycle(){\r\n\r\n}\r\nfunction getWind(){\r\n\treturn wind;\r\n}\r\n\r\n\r\nfunction animate(){\r\n\r\n\ttempHeight+=tempD;\r\n    if(tempHeight<0){\r\n        tempHeight=0;\r\n        tempD=-tempD;\r\n    }else if(tempHeight>40){\r\n        tempHeight=40;\r\n        tempD=-tempD;\r\n    }\r\n    if(tempHeight>10){\r\n        sunLight.color.setHex(0xffffff);\r\n        ambientLight.color.setHex(0x606060);\r\n        _Render_js__WEBPACK_IMPORTED_MODULE_1__.setClearColor(0xb0e9fd,1);\r\n    }/*else if(tempHeight>50){\r\n        sunLight.color.setHex(0xFAD227);\r\n        ambientLight.color.setHex(0x5E5371);\r\n        Render.setClearColor(0xF0FDB0,1);\r\n    }else{\r\n        sunLight.color.setHex(0xFF6600);\r\n        ambientLight.color.setHex(0x3F2A62);\r\n        Render.setClearColor(0xF86722,1);\r\n    }*/\r\n    sunLight.position.z=200+tempHeight*4;\r\n    sunTarget.position.set(0,0,-tempHeight*4);\r\n}\r\n\r\n\r\nfunction setShadows(bool){\r\n    if(!bool){\r\n        //SHADOW_SIZE=2048;\r\n         sunLight.visible = false;\r\n         sunLight2.visible = true;\r\n    }\r\n    else{\r\n        //SHADOW_SIZE=512;\r\n        sunLight.visible = true;\r\n         sunLight2.visible = false;    \r\n     }\r\n   // sunLight.shadow.mapSize.width = SHADOW_SIZE;  // default\r\n    //sunLight.shadow.mapSize.height = SHADOW_SIZE; // default\r\n}\r\n\r\nfunction setLightHelper(bool){\r\n    if(!bool){\r\n         if(debugLightHelper){\r\n         \tdebugLightHelper.visible=false;\r\n         }\r\n    }\r\n    else{\r\n    \tif(!debugLightHelper){\r\n    \t\tdebugLightHelper = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.CameraHelper( sunLight.shadow.camera );\r\n\t\t\t_Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel( debugLightHelper ); \r\n    \t}else{\r\n    \t\tdebugLightHelper.visible=true;\r\n    \t}\r\n        \r\n     }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://buup/./src/Environment.js?");

/***/ }),

/***/ "./src/Helper.js":
/*!***********************!*\
  !*** ./src/Helper.js ***!
  \***********************/
/*! namespace exports */
/*! export getRandomColor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexToRGB [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexToRGBFloat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rgbFloatToHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rgbToHex [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rgbToHex\": () => /* binding */ rgbToHex,\n/* harmony export */   \"rgbFloatToHex\": () => /* binding */ rgbFloatToHex,\n/* harmony export */   \"hexToRGB\": () => /* binding */ hexToRGB,\n/* harmony export */   \"hexToRGBFloat\": () => /* binding */ hexToRGBFloat,\n/* harmony export */   \"getRandomColor\": () => /* binding */ getRandomColor\n/* harmony export */ });\n\r\n\r\nfunction hexToRGB(h) {\r\n\tif(h.startsWith('0x'))\r\n\t\th=h.substring(1)\r\n  let r = 0, g = 0, b = 0;\r\n\r\n  // 3 digits\r\n  if (h.length == 4) {\r\n    r = \"0x\" + h[1] + h[1];\r\n    g = \"0x\" + h[2] + h[2];\r\n    b = \"0x\" + h[3] + h[3];\r\n\r\n  // 6 digits\r\n  } else if (h.length == 7) {\r\n    r = \"0x\" + h[1] + h[2];\r\n    g = \"0x\" + h[3] + h[4];\r\n    b = \"0x\" + h[5] + h[6];\r\n  }\r\n  let ar=[parseInt(r),parseInt(g),parseInt(b)]\r\n  \r\n  return ar;\r\n}\r\nfunction hexToRGBFloat(h){\r\n\tlet ar=hexToRGB(h);\r\n\treturn ar.map(v=>{return v/256.0})\r\n}\r\n\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\nfunction rgbFloatToHex(r,g,b){\r\n\tr=Math.floor(r*256);\r\n\tg=Math.floor(g*256);\r\n\tb=Math.floor(b*256);\r\n\treturn rgbToHex(r,g,b)\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '';//Math.random()>0.3?0x66B136:0x76610E;\r\n  for (var i = 0; i < 6; i++) {\r\n    let val;\r\n    /*if(i<2)\r\n        val=(Math.random() * 4)+4\r\n    else if(i<4)\r\n        val=(Math.random() * 6)+7\r\n    else*/\r\n        val=Math.random() * 16\r\n\r\n    color += letters[Math.floor(val)];\r\n  }\r\n  return parseInt(color);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://buup/./src/Helper.js?");

/***/ }),

/***/ "./src/HexManager.js":
/*!***************************!*\
  !*** ./src/HexManager.js ***!
  \***************************/
/*! namespace exports */
/*! export hexCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hexPick [provided] [no usage info] [missing usage info prevents renaming] */
/*! export init [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => /* binding */ init,\n/* harmony export */   \"hexCheck\": () => /* binding */ hexCheck,\n/* harmony export */   \"hexPick\": () => /* binding */ hexPick\n/* harmony export */ });\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _Helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Helper.js */ \"./src/Helper.js\");\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n\r\n\r\n\r\n\r\n//grass #6CA90B\r\n//grass2 #A1C73A\r\n//grass3 #53963F\r\n//path #BEB55D\r\n\r\n\r\nvar hex=[]\r\nvar landBits=[]\r\nvar grid=[];\r\nconst SCALE=80\r\nconst HALF_GRID=12*SCALE/2\r\n\r\nfunction init(){\r\n\r\n_Render_js__WEBPACK_IMPORTED_MODULE_0__.loadModel('./assets/models/Hex.glb',m=>{\r\n\tconsole.log('got children '+m.children.length)\r\n\tlet basicMat = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({ vertexColors: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_2__.VertexColors, metalness: 0, roughness: 1.0}); // \r\n\t//basicMat.shading = THREE.SmoothShading;\r\n\tfor(let i=0;i<m.children.length;i++){\r\n\t\t//m.children[i]\r\n\t\tlet mm=m.children[i]\r\n\t\t//mm.geometry.computeVertexNormals(true);\r\n\t\t//m.children[i].scale.set(200,200,200)\r\n\t\t//mm.rotation.x=Math.PI/2\r\n\t\tmm.position.set(0,0,60)\r\n\t\tmm.scale.set(SCALE,SCALE,SCALE)\r\n    //mm.material= new THREE.MeshBasicMaterial( {color: 0x20E89F, side: THREE.FrontSide} );\r\n\r\n\t\tmm.material=basicMat\r\n\t\tmm.receiveShadow =true;\r\n\t\t//Render.addModel(mm)\r\n\t\thex[mm.name]=mm;\r\n\t\tlet colors=[];\r\n\t\tlet count=mm.geometry.attributes.color.array.length/4\r\n\t\tfor(let i=0;i<count;i++){\r\n\t\t\tlet n=i*4;\r\n\t\t\tlet vr=mm.geometry.attributes.color.array[0+n];\r\n\t\t\tlet vg=mm.geometry.attributes.color.array[1+n];\r\n\t\t\tlet vb=mm.geometry.attributes.color.array[2+n];\r\n\t\t\t//let va=mm.geometry.attributes.color.array[3+n];\r\n\t\t\tlet val=_Helper_js__WEBPACK_IMPORTED_MODULE_1__.rgbFloatToHex(vr,vg,vb)\r\n\t\t\tcolors[val]=val\r\n\t\t}\r\n\t/*\t#6CA90B: \"#2d6404\"\r\n#3f6607: \"#3f6607\"\r\n#776d12: \"#776d12\"\r\n#396506: \"#396506\"\r\n\r\n\r\n#776d12: \"#2d6404\"*/\r\n\t\tconsole.log(colors)\r\n\t\t\r\n\t\t//console.log(vr,vg,vb,va)\r\n\t\t//let val=Helper.rgbFloatToHex(mm.geometry.attributes.color.array[0],mm.geometry.attributes.color.array[1],mm.geometry.attributes.color.array[2])\r\n\t\t//console.log(val)\r\n\r\n\t}\r\n\tclearLand()\r\n\r\n\t\twindow.hex=hex;\r\n\t\twindow.place=place\r\n\t\twindow.land=land\r\n\t\twindow.clearLand=clearLand\r\n\t \t\r\n\r\n\t\r\n\t//window.m=m;//.children[0]\r\n})\r\n\r\n}\r\n\r\nfunction place(x,y,t){\r\n\tgrid[x][y]=t\r\n\tprocessLand();\r\n}\r\n\r\nfunction processLand(){\r\n\tSEED=6;\r\n\tmodelClear()\r\n\tfor(let i=0;i<grid.length;i++){\r\n\t\tfor(let j=0;j<grid.length;j++){\r\n\t\t\tlet n=grid[i][j];\r\n\t\t\tlet rando=Math.floor(randomSeed(1,3))\r\n\t\t\tif(n>1){ //hex coordinate system follows, hang tight it's a bumpy ride!\r\n\t\t\t\t//if(i==2 && j==2)\r\n\t\t\t\t\t//debugger\r\n\t\t\t\tlet l,r,tl,tr;\r\n\t\t\t\tif(i>0)\r\n\t\t\t\tl=grid[i-1][j]>1  // pure hex x left right\r\n\t\t\t\tif(i<grid.length-1)\r\n\t\t\t\tr=grid[i+1][j]>1\r\n\r\n\r\n\t\t\t\t//land('P1',i,j,1)\r\n\t\t\t\r\n\t\t\t\t//upper hex edges, left and right\r\n\r\n\t\t\t\tif(grid.length-1){\r\n\r\n\t\t\t\t\tif(i>0)\r\n\t\t\t\t\ttl=grid[i-1][j+1]>1\r\n\t\t\t\t\ttr=grid[i][j+1]>1 \r\n\t\t\t\t}\r\n\t\t\t\t//land('T1',i,j,1)\r\n\r\n\t\t\t\t//lower hex edges, left and right, notice the farther then normal postive check due to our skewed hex design\r\n\t\t\t\tlet bl=(j>0 && grid[i][j-1]>1)\r\n\t\t\t\tlet br=(j>0 && i<grid.length-1 && grid[i+1][j-1]>1)\r\n\r\n\t\t\t\tlet st=(tl?'1':'0') + (l?'1':'0') + (bl?'1':'0') + (br?'1':'0') + (r?'1':'0') + (tr?'1':'0');\r\n\t\t\t\t\r\n\r\n\t\t\t\t//let total=l?1:0 + r?1:0 + tl?1:0 + tr?1:0 + bl?1:0 + br?1:0;\r\n\t\t\t\tlet start=-1;\r\n\t\t\t\tlet index=0;\r\n\t\t\t\tlet circle=[tl,tr,r,br,bl,l]\r\n\t\t\t\tlet branches=[];\r\n\t\t\t\tlet hole=5;\r\n\t\t\t\tcircle.forEach((b,i)=>{\r\n\t\t\t\t\tif(b){\r\n\t\t\t\t\t\tbranches.push(i)\r\n\t\t\t\t\t\tif(start==-1)\r\n\t\t\t\t\t\t\tstart=i;\r\n\r\n\t\t\t\t\t\tindex=i;\r\n\t\t\t\t\t}else\r\n\t\t\t\t\t\thole=i\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log('grid %i %i %s branches %i',i,j,st,branches.length)\r\n\r\n\t\t\t\tlet letter='N'\r\n\t\t\t\tlet type=''\r\n\t\t\t\tif(branches.length>0){\r\n\t\t\t\t\tlet distances=[];\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar last=branches[0]\r\n\t\t\t\t\tfor(let i=1;i<branches.length;i++){\r\n\t\t\t\t\t\tdistances.push((branches[i]-last)-1)\r\n\t\t\t\t\t\tlast=branches[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(distances)\r\n\r\n\t\t\t\t\tlet r=start==-1?0:start;\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch(branches.length){\r\n\t\t\t\t\t\tcase 1:  letter='E'\r\n\t\t\t\t\t\tr+=0;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:  letter='P'; \r\n\t\t\t\t\t\tif(distances[0]==0){\r\n\t\t\t\t\t\t\ttype='3';r+=0;\r\n\t\t\t\t\t\t}else if(distances[0]==1){\r\n\t\t\t\t\t\t\ttype='2';r+=0;\r\n\t\t\t\t\t\t}else if(distances[0]==2){\r\n\t\t\t\t\t\t\ttype='1';r+=0;\r\n\t\t\t\t\t\t}else if(distances[0]==3){\r\n\t\t\t\t\t\t\ttype='2';r+=4;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttype='3';r+=5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:letter='T'; //3 paths\r\n\t\t\t\t\t\tif(distances[0]==0){\r\n\t\t\t\t\t\t\tif(distances[1]==0){\r\n\t\t\t\t\t\t\t\ttype=1;r+=0;\r\n\t\t\t\t\t\t\t}else if(distances[1]==3){\r\n\t\t\t\t\t\t\t\ttype=1;r+=5;\r\n\t\t\t\t\t\t\t}else if(distances[1]==1){\r\n\t\t\t\t\t\t\t\ttype=3;r+=3;\r\n\t\t\t\t\t\t\t}else if(distances[1]==2){\r\n\t\t\t\t\t\t\t\ttype=2;r+=4;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(distances[0]==1){\r\n\t\t\t\t\t\t\tif(distances[1]==0){\r\n\t\t\t\t\t\t\t\ttype=2;//r+=0;\r\n\t\t\t\t\t\t\t}else if(distances[1]==1){\r\n\t\t\t\t\t\t\t\ttype=4;//r+=0;\r\n\t\t\t\t\t\t\t}else if(distances[1]==2){\r\n\t\t\t\t\t\t\t\ttype=3;r+=2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(distances[0]==2){\r\n\t\t\t\t\t\t\tif(distances[1]==0){\r\n\t\t\t\t\t\t\t\ttype=3;r+=0;\r\n\t\t\t\t\t\t\t}else if(distances[1]==1){\r\n\t\t\t\t\t\t\t\ttype=2;r+=3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttype=1;r+=4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tr=r%6;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:letter='Q'; //4 path\r\n\t\t\t\t\t\tif(distances[0]==0){\r\n\t\t\t\t\t\t\tif(distances[1]==0){\r\n\t\t\t\t\t\t\t\tif(distances[2]==0){\r\n\t\t\t\t\t\t\t\t\ttype=1;r+=0\r\n\t\t\t\t\t\t\t\t}else if(distances[2]==1){\r\n\t\t\t\t\t\t\t\t\ttype=3;r+=2;\r\n\t\t\t\t\t\t\t\t}else if(distances[2]==2){\r\n\t\t\t\t\t\t\t\t\ttype=1; r+=5;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else if(distances[1]==1){\r\n\t\t\t\t\t\t\t\tif(distances[2]==0){\r\n\t\t\t\t\t\t\t\t\ttype=2;r+=4;\r\n\t\t\t\t\t\t\t\t}else if(distances[2]==1){\r\n\t\t\t\t\t\t\t\t\ttype=3;r+=1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else {//}( 2==2)\r\n\t\t\t\t\t\t\t\ttype=1;r+=4;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(distances[0]==1){\r\n\t\t\t\t\t\t\tif(distances[1]==0){\r\n\t\t\t\t\t\t\t\tif(distances[2]==0){\r\n\t\t\t\t\t\t\t\t\ttype=3; r+=4;\r\n\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\ttype=2;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{ //1 1 0\r\n\t\t\t\t\t\t\t\ttype=3\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttype=1;r+=3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tr=r%6;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:letter='F';\r\n\t\t\t\t\t\tr=hole+1;\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6:letter='H';break;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tland(letter+type,i,j,r)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tland('N',i,j,0)\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t//rotation 0 tl\r\n\t\t\t\t//1 l\r\n\t\t\t\t//2 bl\r\n\t\t\t\t//3 br\r\n\t\t\t\t//4 r\r\n\t\t\t\t//5 tr\r\n/*\r\n\t\t\t\tswitch(total){\r\n\t\t\t\t\tcase 1: land('P2',i,j); break;\r\n\t\t\t\t\tcase 2: land('P1',i,j); break;\r\n\t\t\t\t\tcase 3: land('T1',i,j); break;\r\n\t\t\t\t\tcase 4: land('Q1',i,j); break;\r\n\t\t\t\t\tcase 5: land('F1',i,j); break;\r\n\t\t\t\t\tcase 6: land('H',i,j); break;\r\n\t\t\t\t\tdefault: land('O1',i,j);\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\t//land('Q1',i,j,1)\r\n\r\n\t\t\t\t \r\n\t\t\t\t//no neighbors! \r\n\t\t\t\t//land('P1',i,j,n-2)\r\n\r\n\t\t\t}else if(n==1){\r\n\t\t\t\t//SEED=i*j\r\n\t\t\t\tland('O'+rando,i,j)//,Math.floor(Math.random()*6))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nfunction land(st,x,y,r) {\r\n\tlet radius=1;\r\n\tlet skew=SCALE*radius*Math.sqrt(3)/2;\r\n\r\n\t//dummy.position.set(offsetx+i*9,0,offsetz+j*skew*2 +i*skew);\r\n\tlet m=hex[\"Grass_\"+st].clone();\r\n\tm.position.set((-HALF_GRID)+x*skew*2 +y*skew,y*SCALE*1.5,-SCALE*.2)\r\n\tif(r){ //sp always not 0\r\n\t\tr=6-r;\r\n\t\tm.rotation.z=r*Math.PI/3\r\n\t}\r\n\t\r\n\tlandBits.push(m)\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_0__.addModel(m)\r\n}\r\n\r\nfunction modelClear(){\r\n\tlandBits.forEach(m=>{\r\n\t\t_Render_js__WEBPACK_IMPORTED_MODULE_0__.removeModel(m)\r\n\t})\r\n\tlandBits=[];\r\n}\r\nfunction clearLand(){\r\n\tlet size=12\r\n\tmodelClear()\r\n\tfor(let i=0;i<size;i++){\r\n\t\tgrid[i]=[];\r\n\t\tfor(let j=0;j<size;j++){\r\n\t\t\tgrid[i][j]=1\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hexCheck(x,y){\r\n\tlet radius=1;\r\n\tlet skew=SCALE*radius*Math.sqrt(3)/2;\r\n\t//m.position.set(-120+x*skew*2 +y*skew,-120+y*30,40)\r\n\tlet y2=Math.floor((SCALE+y)/(SCALE*1.5));\r\n\tlet x2=Math.floor(((x+HALF_GRID+SCALE)-y2*skew)/(skew*2))\r\n\t_Render_js__WEBPACK_IMPORTED_MODULE_0__.setHexSelector(-HALF_GRID+x2*skew*2 +y2*skew,y2*SCALE*1.5,8)\r\n\t\r\n\treturn [x2,y2]\r\n\r\n\t\r\n}\r\nfunction hexPick(x,y){\r\n\t\r\n\tlet [x2,y2] = hexCheck(x,y)\r\n\tconsole.log('click',x,y,x2,y2)\r\n\tif(x2>-1 && y2>-1){\r\n\t\tif(grid[x2][y2]>1){\r\n\t\t\tplace(x2,y2,1)\r\n\t\t}else{\r\n\t\t\tplace(x2,y2,2)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nvar SEED = 6;\r\n \r\n// in order to work 'Math.seed' must NOT be undefined,\r\n// so in any case, you HAVE to provide a Math.seed\r\nfunction randomSeed(max, min) {\r\n    max = max || 1;\r\n    min = min || 0;\r\n \r\n    SEED = (SEED * 9301 + 49297) % 233280;\r\n    var rnd = SEED / 233280;\r\n \r\n    return min + rnd * (max - min);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://buup/./src/HexManager.js?");

/***/ }),

/***/ "./src/Main.js":
/*!*********************!*\
  !*** ./src/Main.js ***!
  \*********************/
/*! namespace exports */
/*! export updatePhysics [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updatePhysics\": () => /* binding */ updatePhysics\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Render.js */ \"./src/Render.js\");\n/* harmony import */ var _HexManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HexManager.js */ \"./src/HexManager.js\");\n/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Control.js */ \"./src/Control.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/cannon.min.js */ \"./src/lib/cannon.min.js\");\n/* harmony import */ var _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__);\n\r\n\r\n\r\n\r\n\r\n\r\nvar dt = 1 / 20;\r\n\r\n\r\n\r\nfunction init(){\r\n\r\n\tinitCannon();\r\n\tlet canvas=_Render_js__WEBPACK_IMPORTED_MODULE_1__.init();\r\n\tdocument.querySelector('#main').appendChild(canvas)\r\n\r\n\r\n\twindow.addEventListener('click',function(ev){\r\n\t\t //for(let i=0; i<100; i++){\r\n\t            make()\r\n\t       // }\r\n\t})\r\n\r\n\r\n    //makeRoom(200,220,80,10)\r\n    makeFloor();\r\n\r\n    _HexManager_js__WEBPACK_IMPORTED_MODULE_2__.init();\r\n    _Control_js__WEBPACK_IMPORTED_MODULE_3__.init();\r\n\r\n\r\n\r\n\r\n}init();\r\n\r\nvar bodies;\r\nvar meshes;\r\nvar particles;\r\nvar bullets;\r\nvar world;\r\nvar playerBody;\r\nvar controls\r\nvar orientation=0;\r\n\r\nvar gooProperty;\r\nvar wallProperty;\r\n\r\n\r\nfunction initCannon(){\r\n\t\t\tlet N =1;\r\n\t\t\tbodies=[];\r\n\t\t\tmeshes=[];\r\n            particles=[];\r\n            bullets=[];\r\n\t\t\tcontrols={};\r\n            // Setup our world\r\n            world = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.World();\r\n            world.quatNormalizeSkip = 0;\r\n            world.quatNormalizeFast = false;\r\n\r\n            world.gravity.set(0,0,-10);\r\n            world.broadphase = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.NaiveBroadphase();\r\n\r\n            // Create boxes\r\n            let mass = 4, radius = 1.3;\r\n            let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(5,5,10));\r\n            for(let i=0; i<N; i++){\r\n                let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: mass });\r\n                boxBody.addShape(boxShape);\r\n                boxBody.position.set(0,0,60);\r\n                world.addBody(boxBody);\r\n                //boxBody.angularDamping=0.8 //really high\r\n                playerBody=boxBody\r\n                window.playerBody=playerBody\r\n                playerBody.angularDamping=1\r\n                //bodies.push(boxBody);\r\n            }\r\n\r\n\r\n\t\t\t/*\r\n            // Create a plane\r\n            let groundShape = new CANNON.Plane();\r\n            let c=40\r\n            let h=150\r\n            let points=[\r\n            new CANNON.Vec3(-c,-c,0),new CANNON.Vec3(-c,c,0),new CANNON.Vec3(c,c,0),new CANNON.Vec3(c,-c,0),\r\n            new CANNON.Vec3(-c,-c,h),new CANNON.Vec3(-c,c,h),new CANNON.Vec3(c,c,h),new CANNON.Vec3(c,-c,h)\r\n            ]\r\n            let faces=[[4,7,6,5]]//[[3,2,1,0],[4,5,0,1],[6,7,3,2],[0,3,7,4],[2,1,5,6],[4,7,6],[6,5,4]]//,  ,   [2,3,6,7]] //\r\n            let box = new CANNON.ConvexPolyhedron(points,faces);\r\n            */\r\n            /*let groundBody = new CANNON.Body({ mass: 0 });\r\n            groundBody.addShape(box);\r\n            groundBody.position.set(0,0,25)\r\n           // groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2);\r\n            world.addBody(groundBody);*/\r\n\r\n            // Joint body\r\n            /*let shape = new CANNON.Sphere(0.1);\r\n            let jointBody = new CANNON.Body({ mass: 0 });\r\n            jointBody.addShape(shape);\r\n            jointBody.collisionFilterGroup = 0;\r\n            jointBody.collisionFilterMask = 0;\r\n            world.addBody(jointBody)*/\r\n\r\n\r\n\r\n\r\n            window.addEventListener('keydown',ev=>{\r\n            \tconsole.log(ev.keyCode)\r\n            \tswitch(ev.keyCode){\r\n            \t\tcase 37: case 65: controls.left=true;orientation=1;break;//left\r\n            \t\tcase 39: case 68: controls.right=true;orientation=3;break;//right\r\n            \t\tcase 38: case 87:  controls.up=true;orientation=0;break;//up\r\n            \t\tcase 40: case 83: controls.down=true;orientation=2;break;//down\r\n            \t\tcase 32: make(); break;\r\n                    case 66: for(let ii=0;ii<12;ii++){make();} break;\r\n                    case 71: makeMan();break;\r\n            \t}\r\n\r\n            \t\r\n\r\n            })\r\n             window.addEventListener('keyup',ev=>{\r\n             \t\tswitch(ev.keyCode){\r\n            \t\tcase 37: case 65: controls.left=false;break;//left\r\n            \t\tcase 39: case 68: controls.right=false;break;//right\r\n            \t\tcase 38: case 87:  controls.up=false;break;//up\r\n            \t\tcase 40: case 83: controls.down=false;break;//down\r\n            \t}\r\n             })\r\n            gooProperty = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Material({name: \"gooProperty\",friction: 10.0,restitution:-1.0});\r\n            gooProperty.name=\"gooProperty\"\r\n            //gooProperty.friction=1\r\n\r\n            wallProperty = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Material({name: \"wallProperty\",friction: 0.1,restitution:1});\r\n            wallProperty.name=\"wallProperty\"\r\n            //debugger\r\n             /*var gooWallPhysics = new CANNON.ContactMaterial(gooProperty,\r\n                                                                     wallProperty,\r\n                                                                     1, // friction coefficient\r\n                                                                     0  // restitution\r\n                                                                     );*/\r\n             // We must add the contact materials to the world\r\n             //world.addContactMaterial(gooWallPhysics);\r\n\r\n\r\n            \r\n        }\r\n        let count=0;\r\n\r\nfunction make(){\r\n    let fireSpeed=120;\r\n\r\n    let boxBody;\r\n    if(bullets.length>30){\r\n        boxBody=bullets.shift();\r\n        bullets.push(boxBody)\r\n        //boxBody.arrayIndex=\r\n        boxBody.collisionResponse=true;\r\n        boxBody.wakeUp();\r\n\r\n\r\n    }else{\r\n\r\n\r\n\tlet size={x:4,y:4,z:4}\r\n\tlet boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(size.x/2,size.y/2,size.z/2));\r\n\tboxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: 2 });\r\n    boxBody.addShape(boxShape);\r\n    bodies.push(boxBody);\r\n\r\n    boxBody.bullet=true;\r\n\r\n    bullets.push(boxBody)\r\n\r\n\r\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.yellow);\r\n    meshes.push(cube)\r\n\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\r\n    world.addBody(boxBody);\r\n\r\n\r\n}\r\n\r\n\r\n    let v=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\r\n    let speed=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0)\r\n\r\n    if(orientation==1){\r\n        v.x-=15;speed.x-=fireSpeed;\r\n        v.add({x:0,y:rand(2),z:rand(2)})\r\n    }\r\n    if(orientation==3){\r\n        v.x+=15;speed.x+=fireSpeed;\r\n        v.add({x:0,y:rand(2),z:rand(2)})\r\n    }\r\n\r\n    if(orientation==0){\r\n        v.y+=15;speed.y+=fireSpeed;\r\n        v.add({x:rand(2),y:0,z:rand(2)})\r\n    }\r\n    if(orientation==2){\r\n        v.y-=15;speed.y-=fireSpeed;\r\n        v.add({x:rand(2),y:0,z:rand(2)})\r\n    }\r\n\r\n\r\n    //v.applyQuaternion(Render.player.quaternion)\r\n   \tv.add(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position)\r\n   \tboxBody.position.copy(v)\r\n   \tboxBody.quaternion.copy(_Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion)\r\n\r\n   \t//speed.applyQuaternion(Render.player.quaternion)\r\n   \tboxBody.velocity.copy(speed)\r\n\r\n   \tlet opposite=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(-0.05*speed.x,-0.05*speed.y,-0.05*speed.z)\r\n   \t//opposite.applyQuaternion(Render.player.quaternion)\r\n   \topposite.add(playerBody.velocity);\r\n\r\n   \tplayerBody.velocity.copy(opposite)\r\n    \r\n\r\n    //boxBody.angularDamping=0.8 //really high\r\n    count++;\r\n\r\n}\r\nfunction makeBlood(p,v) {\r\nlet boxBody;\r\n    if(count>100){\r\n        boxBody=particles.shift();\r\n        particles.push(boxBody)\r\n        boxBody.collisionResponse=true;\r\n    }else{\r\n\r\n    let size={x:4,y:4,z:4}\r\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(size.x/2,size.y/2,size.z/2));\r\n    boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: 0.01 ,material: gooProperty});\r\n    boxBody.addShape(boxShape);\r\n    bodies.push(boxBody);\r\n\r\n    particles.push(boxBody)\r\n\r\n    //let cube=Render.cubic(size.x,size.y,size.z,0,0,0,Render.blood);\r\n    let sphere=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.SphereGeometry(3.5,5,3)\r\n    let orb = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh( sphere, _Render_js__WEBPACK_IMPORTED_MODULE_1__.blood );\r\n    meshes.push(orb)\r\n\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(orb)\r\n    world.addBody(boxBody);\r\n    }\r\n    boxBody.position.copy(p.position)\r\n    if(v)\r\n        boxBody.velocity.copy(v)\r\n\r\n    boxBody.addEventListener(\"collide\",ev=>{\r\n        if(ev.body.material){\r\n            if(ev.body.material.name=='wallProperty'){\r\n           boxBody.collisionResponse=false;\r\n           boxBody.sleep();\r\n         }\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\nfunction makeMan() {\r\n    let size={x:10,y:10,z:20}\r\n    let boxShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(size.x/2,size.y/2,size.z/2));\r\n    let boxBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: 8 });\r\n    boxBody.addShape(boxShape);\r\n    bodies.push(boxBody);\r\n    boxBody.angularDamping=1\r\n\r\n\r\n    boxBody.addEventListener(\"collide\",ev=>{\r\n        if(ev.body.bullet){\r\n           if(ev.body.velocity.length()>50){\r\n            boxBody.angularDamping=0.01\r\n            console.log('sht')\r\n            makeBlood(boxBody,ev.body.velocity)\r\n           }\r\n        }\r\n    })\r\n\r\n\r\n    let cube=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(size.x,size.y,size.z);\r\n    meshes.push(cube)\r\n\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(cube)\r\n    world.addBody(boxBody);\r\n\r\n}\r\nfunction applyQuaternion(v,q){ //ripped from threejs because i didnt feel like converting between cannojs types\r\n\r\n\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tconst ix = qw * x + qy * z - qz * y;\r\n\t\tconst iy = qw * y + qz * x - qx * z;\r\n\t\tconst iz = qw * z + qx * y - qy * x;\r\n\t\tconst iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tv.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tv.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tv.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn v;\r\n}\r\n\r\nfunction updatePhysics(){\r\n            /*bodies[0].position.set(point.x,point.y,point.z)\r\n            bodies[0].velocity.set(0,0,0)\r\n            bodies[0].angularDamping=1\r\n            bodies[0].inertia.set(0,0,0)*/\r\n\r\n            world.step(dt);\r\n\r\n            \r\n\r\n            for(var i=0; i !== meshes.length; i++){\r\n                meshes[i].position.copy(bodies[i].position);\r\n                meshes[i].quaternion.copy(bodies[i].quaternion);\r\n                if(bodies[i].position.z<-100){\r\n                \tbodies[i].position.set(Math.random()*80 -40,Math.random()*80 -40,100)\r\n\r\n                \tbodies[i].velocity.set(0,0,0)\r\n                    bodies[i].collisionResponse=false;\r\n                    bodies[i].sleep();\r\n                }\r\n\r\n            }\r\n\r\n\r\n            if(controls.left){\r\n            \tif(playerBody.velocity.x>-40)\r\n            \t\t\tplayerBody.velocity.x-=4\r\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(0,0,1), Math.PI/2);\r\n\r\n            }else if(controls.right){\r\n            \tif(playerBody.velocity.x<40)\r\n            \t\t\tplayerBody.velocity.x+=4\r\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(0,0,1), 3*Math.PI/2);\r\n\r\n            }else if(controls.up){\r\n            \tif(playerBody.velocity.y<40)\r\n            \t\t\tplayerBody.velocity.y+=4\r\n            \t\t_Control_js__WEBPACK_IMPORTED_MODULE_3__.getAngle()\r\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(0,0,1), 0);\r\n\r\n            }else if(controls.down){\r\n            \tif(playerBody.velocity.y>-40)\r\n            \t\t\tplayerBody.velocity.y-=4\r\n                playerBody.quaternion.setFromAxisAngle(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(0,0,1), Math.PI);\r\n\r\n            }\r\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.position.copy(playerBody.position);\r\n            _Render_js__WEBPACK_IMPORTED_MODULE_1__.player.quaternion.copy(playerBody.quaternion);\r\n            //console.log(Render.player.position)\r\n        }\r\n\r\nfunction makeRoom(w,d,h,t){\r\n    let body = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: 0 ,material: wallProperty});\r\n\r\n    let xWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(t/2,d,h));\r\n    let yWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(w,t/2,h));\r\n    let zWall = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Box(new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3(w,d,t/2));\r\n\r\n\r\n\r\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( -w, 0,h/2));\r\n    body.addShape(xWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( w, 0,h/2));\r\n\r\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( 0, -d,h/2));\r\n    body.addShape(yWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( 0, d,h/2));\r\n\r\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( 0, 0,h));\r\n    body.addShape(zWall, new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Vec3( 0, 0,0));\r\n    world.addBody(body);\r\n\r\n    let xm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(t,d*2,h,-w,0,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\r\n    let xm2=xm.clone()\r\n    xm2.position.x=w;\r\n\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm)\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(xm2)\r\n\r\n    let ym=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,t,h,0,d,h/2,_Render_js__WEBPACK_IMPORTED_MODULE_1__.wood);\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(ym)\r\n\r\n    let zm=_Render_js__WEBPACK_IMPORTED_MODULE_1__.cubic(w*2,d*2,t,0,0,0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.ground);\r\n    _Render_js__WEBPACK_IMPORTED_MODULE_1__.addModel(zm)\r\n\r\n}\r\nfunction makeFloor(){\r\n\tlet groundShape = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Plane();\r\n\tlet groundBody = new _lib_cannon_min_js__WEBPACK_IMPORTED_MODULE_4__.Body({ mass: 0 });\r\n\tgroundBody.addShape(groundShape);\r\n\tworld.addBody(groundBody);\r\n}\r\nfunction rand(x){\r\n    return (Math.random()*2 -1)*x\r\n}\r\n\r\n\n\n//# sourceURL=webpack://buup/./src/Main.js?");

/***/ }),

/***/ "./src/Render.js":
/*!***********************!*\
  !*** ./src/Render.js ***!
  \***********************/
/*! namespace exports */
/*! export addModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addModel2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export blood [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bufferPrint [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cubic [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getAlphaCanvas [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ground [provided] [no usage info] [missing usage info prevents renaming] */
/*! export init [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export player [provided] [no usage info] [missing usage info prevents renaming] */
/*! export removeModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setClearColor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setHexSelector [provided] [no usage info] [missing usage info prevents renaming] */
/*! export wood [provided] [no usage info] [missing usage info prevents renaming] */
/*! export yellow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => /* binding */ init,\n/* harmony export */   \"addModel\": () => /* binding */ addModel,\n/* harmony export */   \"setHexSelector\": () => /* binding */ setHexSelector,\n/* harmony export */   \"removeModel\": () => /* binding */ removeModel,\n/* harmony export */   \"setClearColor\": () => /* binding */ setClearColor,\n/* harmony export */   \"addModel2\": () => /* binding */ addModel2,\n/* harmony export */   \"cubic\": () => /* binding */ cubic,\n/* harmony export */   \"wood\": () => /* binding */ wood,\n/* harmony export */   \"ground\": () => /* binding */ ground,\n/* harmony export */   \"blood\": () => /* binding */ blood,\n/* harmony export */   \"yellow\": () => /* binding */ yellow,\n/* harmony export */   \"getAlphaCanvas\": () => /* binding */ getAlphaCanvas,\n/* harmony export */   \"bufferPrint\": () => /* binding */ bufferPrint,\n/* harmony export */   \"loadModel\": () => /* binding */ loadModel,\n/* harmony export */   \"resize\": () => /* binding */ resize,\n/* harmony export */   \"player\": () => /* binding */ player\n/* harmony export */ });\n/* harmony import */ var _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/three.module.js */ \"./src/lib/three.module.js\");\n/* harmony import */ var _Main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Main.js */ \"./src/Main.js\");\n/* harmony import */ var _Control_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Control.js */ \"./src/Control.js\");\n/* harmony import */ var _Environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Environment */ \"./src/Environment.js\");\n/* harmony import */ var _lib_GLTFLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/GLTFLoader.js */ \"./src/lib/GLTFLoader.js\");\n/* harmony import */ var _lib_EffectComposer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/EffectComposer.js */ \"./src/lib/EffectComposer.js\");\n/* harmony import */ var _lib_ShaderPass_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/ShaderPass.js */ \"./src/lib/ShaderPass.js\");\n/* harmony import */ var _lib_SSAOPass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/SSAOPass.js */ \"./src/lib/SSAOPass.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//import * as Control from \"./Control.js?v=16\";\r\n//import * as World from \"./World.js?v=16\";\r\n//import {OrbitControls} from \"./lib/OrbitControls.js\";\r\n//import * as Texture from \"./Texture.js?v=16\";\r\n//import * as Stats from \"./lib/stats.js\";\r\n//import * as AssetManager from \"./AssetManager.js?v=16\";\r\n//import * as Experiment from \"./Experiment.js?v=16\";\r\n\r\n\r\nvar camera, renderer;\r\n\r\nvar docWidth, docHeight;\r\n\r\nvar loader;\r\nvar mixer;\r\n\r\nvar SHADOW_SIZE = 2048;\r\nvar SIZE_DIVIDER = 8;\r\n\r\nvar alphaCanvas;\r\n\r\n\r\nvar activeCanvas;\r\n\r\nvar composer;\r\n\r\nvar specterMaterial;\r\nvar defaultMat\r\n\r\nvar scene\r\nvar group\r\n\r\nvar player;\r\nvar wood;\r\nvar ground;\r\nvar blood;\r\nvar yellow;\r\n\r\nvar pointer;\r\nvar hexSelector;\r\nvar pointerMat;\r\nvar pointerMatOn;\r\n\r\n\r\nfunction init() {\r\n\r\n     \r\n\r\n    camera = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 5000);\r\n    camera.position.z = 200; //400\r\n    camera.position.y = -200; //-800\r\n    camera.up = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 1)\r\n\r\n    camera.lookAt(new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 0, 0));\r\n\r\n    scene= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene();\r\n    activeScene = scene;\r\n\r\n    alphaCanvas = document.createElement('div');\r\n    alphaCanvas.classList.add('canvasHolder');\r\n\r\n\r\n\r\n    renderer = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderer({  antialias: true }); //alpha: true,\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PCFSoftShadowMap;\r\n\r\n    renderer.setClearColor(0xFF7F32, 1); //0xb0e9fd,1);//0xb0e9fd,1)\r\n\r\n    alphaCanvas.appendChild(renderer.domElement);\r\n\r\n    loader = new _lib_GLTFLoader_js__WEBPACK_IMPORTED_MODULE_4__.GLTFLoader();\r\n\r\n    initCustomMaterial();\r\n\r\n    activeCanvas = alphaCanvas;\r\n\r\n\r\n\r\n    resize();\r\n\r\n\r\n    composer = new _lib_EffectComposer_js__WEBPACK_IMPORTED_MODULE_5__.EffectComposer(renderer);\r\n    //var luminosityPass = new ShaderPass(LuminosityShader);\r\n    //composer.addPass(luminosityPass);\r\n    let ssaoPass = new _lib_SSAOPass_js__WEBPACK_IMPORTED_MODULE_7__.SSAOPass( scene, camera, 300, 200);\r\n    ssaoPass.kernelRadius = 6;\r\n    ssaoPass.minDistance=0.00015;\r\n    ssaoPass.maxDistance=0.001;\r\n    composer.addPass( ssaoPass );\r\n    window.ssao=ssaoPass\r\n\r\n\r\n\r\n    let material= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color:0x75D5CE});\r\n    new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0x20E89F, metalness: 0, roughness: 1.0 });\r\n\r\n    wood= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0x20E89F, metalness: 0, roughness: 1.0 });\r\n    ground= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0x5471A5, metalness: 0, roughness: 1.0 });\r\n    let guyMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xEAF722, metalness: 0, roughness: 1.0 }); \r\n    defaultMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xCF2ADE, metalness: 0, roughness: 1.0 });\r\n    blood= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xB60B0B, metalness: 0, roughness: 1.0 }); \r\n    yellow= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xEAF722, metalness: 0, roughness: 1.0 });\r\n\r\n\r\n    //material = new THREE.MeshBasicMaterial( {color: new THREE.Color(\"white\")} );\r\n    /*geometry = new THREE.BoxBufferGeometry( 100, 100, 100 );\r\n    cube = new THREE.Mesh( geometry, material );\r\n    cube.position.z=50;\r\n    scene.add( cube );*/\r\n    group = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group();\r\n\r\n/*\r\n    group.add(cubic(10,100,50,-50,0,50,wood));\r\n    group.add(cubic(10,100,50,50,0,50,wood));\r\n    group.add(cubic(100,10,50,0,50,50,wood));\r\n    group.add(cubic(100,100,10,0,0,20,ground));*/\r\n\r\n    player=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group();\r\n    let whiteMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0xFFFFFF, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\r\n\r\n    let blackMat= new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( {color: 0x321818, side: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.FrontSide} );\r\n\r\n\r\n    let p1=cubic(10,10,20,0,0,0,guyMat);\r\n    let p2=cubic(10,2,10,0,5,5,whiteMat)\r\n    let p3=cubic(3,2,3,0,6,5,blackMat)\r\n\r\n    player.add(p1)\r\n    player.add(p2)\r\n    player.add(p3)\r\n    group.add(player)\r\n\r\n    scene.add(group)\r\n    pointerInit();\r\n    _Environment__WEBPACK_IMPORTED_MODULE_3__.init();\r\n    _Control_js__WEBPACK_IMPORTED_MODULE_2__.setRenderer(renderer,alphaCanvas,camera,false)\r\n\r\n    animate();\r\n    return alphaCanvas\r\n\r\n\r\n}\r\n\r\nfunction pointerInit(){\r\n    let pointerGeom = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.CircleGeometry( 6, 16 );\r\n    //pointerGeom.rotateX(-Math.PI/2.0);\r\n    pointerMat = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( { color:0x4AE13A } );\r\n    pointerMatOn = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial( { color:0xEBEE00 } );\r\n    pointer = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(pointerGeom,pointerMat);\r\n    pointer.position.z=0.05;\r\n    scene.add(pointer);\r\n\r\n\r\n    let SCALE=80;\r\n    let g=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Group();\r\n    let p=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PlaneBufferGeometry(6,SCALE);\r\n    let m=new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(p,pointerMat)\r\n    m.position.set(SCALE,0,0)\r\n    g.add(m)\r\n    for(let i=0;i<6;i++){\r\n        let n=m.clone();\r\n        n.rotation.z=i*Math.PI/3\r\n\r\n        n.position.set(Math.cos(n.rotation.z)*SCALE,Math.sin(n.rotation.z)*SCALE,0)\r\n        g.add(n)\r\n    }\r\n    g.position.z+=6;\r\n    scene.add(g)\r\n    hexSelector=g;\r\n}\r\nfunction setHexSelector(x,y,z){\r\n    hexSelector.position.set(x,y,z)\r\n}\r\n\r\nfunction getAlphaCanvas() {\r\n    return alphaCanvas;\r\n}\r\n\r\nfunction loadModel(model, callback, texture, color) {\r\n    loader.load(\r\n        ('./' + model), //villager22.gltf',\r\n        (gltf) => {\r\n            // called when the resource is loaded\r\n            //gltf.scene.scale.set(10,10,10);\r\n            let model; //=gltf.scene.children[0];\r\n            gltf.scene.rotation.x = Math.PI / 2;\r\n            gltf.scene.traverse(function(child) {\r\n                if(child instanceof _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh) {\r\n                    //if(child.name==\"Cube\"){\r\n                    model = child;\r\n                    if(!texture) {\r\n                        if(color)\r\n                            child.material = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: color, metalness: 0, roughness: 1.0 }); // \r\n                        else\r\n                            child.material = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ vertexColors: _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.VertexColors, metalness: 0, roughness: 1.0}); // \r\n\r\n                        child.material.needsUpdate = true;\r\n                        //child.material.skinning=true;\r\n                    }\r\n                    //child.material.morphTargets=true;\r\n\r\n                    //child.material.map.needsUpdate = true;\r\n                    // }else{\r\n\r\n                    //}\r\n                }\r\n            });\r\n            //gltf.scene.children[0].children[1].scale.set(20,20,20);\r\n            //gltf.scene.children.pop();\r\n            //let mixer = new THREE.AnimationMixer( gltf.scene );\r\n            //model=gltf.scene.children[0]\r\n            let m2 = gltf.scene.children[0];\r\n            if(model) {\r\n                var animations = gltf.animations;\r\n                if(animations && animations.length) {\r\n\r\n                    mixer = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.AnimationMixer(model);\r\n                    for(var i = 0; i < animations.length; i++) {\r\n                        var animation = animations[i];\r\n                        // There's .3333 seconds junk at the tail of the Monster animation that\r\n                        // keeps it from looping cleanly. Clip it at 3 seconds\r\n\r\n                        //if ( sceneInfo.animationTime ) {\r\n                        //    animation.duration = sceneInfo.animationTime;\r\n\r\n\r\n                        // }\r\n                        action = mixer.clipAction(animation);\r\n                        //action.setEffectiveTimeScale(200);\r\n                        //action.timeScale=0.002;\r\n                        action.timeScale = 0.002;\r\n                        //if ( state.playAnimation ) \r\n                        action.play();\r\n                    }\r\n                }\r\n                //mainScene.add( gltf.scene.children[0] );\r\n            }\r\n            callback(gltf.scene);\r\n        },\r\n        (xhr) => {\r\n            // called while loading is progressing\r\n            console.log(`${( xhr.loaded / xhr.total * 100 )}% loaded`);\r\n        },\r\n        (error) => {\r\n            // called when loading has errors\r\n            console.error('An error happened', error);\r\n        },\r\n    );\r\n}\r\n\r\nfunction resize() {\r\n    //Math.max(window.screen.width, window.innerWidth)\r\n    //Math.max(window.screen.height, window.innerHeight)\r\n    if(window.screen.width> window.innerWidth){\r\n        docWidth =  window.innerWidth\r\n        docHeight = window.innerHeight\r\n    }else{\r\n        docWidth =  window.screen.width\r\n        docHeight = window.screen.height\r\n    }\r\n\r\n    //docWidth =  window.innerWidth //Math.max(window.screen.width, window.innerWidth)\r\n    //docHeight = window.innerHeight //Math.max(window.screen.height, window.innerHeight)//window.innerHeight;\r\n    camera.aspect = docWidth / docHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setPixelRatio(0.5);//window.devicePixelRatio / SIZE_DIVIDER);\r\n    renderer.setSize(docWidth, docHeight);\r\n}\r\n\r\nvar dir=1;\r\nfunction animate(time) {\r\n\t_Main_js__WEBPACK_IMPORTED_MODULE_1__.updatePhysics();\r\n    //group.rotation.z+=0.002*dir;\r\n    if(group.rotation.z>Math.PI/16)\r\n    \tdir=-1;\r\n    else if(group.rotation.z<-Math.PI/16)\r\n    \tdir=1;\r\n\r\n    applyCursor()\r\n    _Environment__WEBPACK_IMPORTED_MODULE_3__.animate();\r\n\r\n    renderer.render(scene, camera);\r\n    //composer.render();\r\n    requestAnimationFrame(animate);\r\n}\r\n\r\nfunction dumpImage(img) {\r\n    let dom = document.querySelector('#afterImage');\r\n    if(dom)\r\n        dom.setAttribute('src', img);\r\n}\r\n\r\nfunction bufferPrint() {\r\n    //_grabImage=true;\r\n    renderer.render(getScene(), camera);\r\n    dumpImage(renderer.domElement.toDataURL());\r\n}\r\n\r\nvar anchors = [];\r\n\r\nfunction addAnchor(host, bubble) {\r\n    let anchor = {\r\n        host: host,\r\n        bubble: bubble,\r\n        x: 0,\r\n        y: 0,\r\n        offset: 0,\r\n    }\r\n    anchors.forEach(a => {\r\n        if(a.host == host) {\r\n            a.offset -= 40;\r\n        }\r\n    })\r\n    anchors.push(anchor);\r\n    console.log(anchors.length + ' anchors');\r\n    updateAnchor(anchor, anchors.length - 1);\r\n    return anchor;\r\n}\r\n\r\nfunction updateAnchor(anchor, index) {\r\n    if(!anchor.bubble) {\r\n        anchors.splice(index, 1);\r\n        return false;\r\n    }\r\n    if(anchor.host) {\r\n        let vector = projectVector(anchor.host);\r\n        anchor.bubble.style.left = -16 + vector.x + 'px';\r\n        anchor.bubble.style.top = (40 + anchor.offset + vector.y) + 'px';\r\n        anchor.x = vector.x;\r\n        anchor.y = vector.y;\r\n    }\r\n\r\n}\r\n\r\nfunction roundEdge(x) {\r\n    x = x % (Math.PI)\r\n    if(x < 0)\r\n        x += Math.PI * 2;\r\n\r\n    if(x > Math.PI / 4) {\r\n        if(x > 5 * Math.PI / 4) {\r\n            if(x < 7 * Math.PI / 4) {\r\n                return Math.PI * 3 / 2;\r\n            }\r\n        } else {\r\n            if(x > 3 * Math.PI / 4) {\r\n                return Math.PI;\r\n            } else {\r\n                return Math.PI / 2;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction syncModel(index, obj) {\r\n    let m = modelsIndexed[index];\r\n    m.position.x = obj.x;\r\n    m.position.y = obj.y;\r\n    m.position.z = obj.z;\r\n}\r\n\r\nfunction createModel(index) {\r\n    let model = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(cubeGeometry, cubeMaterial);\r\n    modelsIndexed[index] = model;\r\n    return model;\r\n}\r\nfunction addModel(model){\r\n\tgroup.add(model)\r\n}\r\nfunction addModel2(model){\r\n\tscene.add(model)\r\n}\r\nfunction removeModel(model){\r\n\tgroup.remove(model)\r\n}\r\n\r\nfunction cubic(i,j,k,x,y,z,c){\r\n     let geometry = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BoxBufferGeometry( i,j,k );\r\n     if(!c)\r\n    \tc=defaultMat\r\n\r\n    let cube = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh( geometry, c );\r\n    cube.castShadow=true;\r\n\r\n     cube.position.x=x?x:0;\r\n     cube.position.y=y?y:0;\r\n     cube.position.z=z?z:0;\r\n     return cube;\r\n}\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = Math.random() > 0.5 ? 0x66B136 : 0x76610E;\r\n    return parseInt(color);\r\n}\r\n\r\nfunction applyCursor() {\r\n    /*if(Control.down()) {\r\n        pointer.material = pointerMatOn;\r\n    } else\r\n        pointer.material = pointerMat;*/\r\n\r\n    var vector = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\r\n    vector.set((_Control_js__WEBPACK_IMPORTED_MODULE_2__.screenX() / window.innerWidth) * 2 - 1, -(_Control_js__WEBPACK_IMPORTED_MODULE_2__.screenY() / window.innerHeight) * 2 + 1, 0.5);\r\n    vector.unproject(camera)\r\n    var dir = vector.sub(camera.position).normalize();\r\n    var distance = -camera.position.z / dir.z;\r\n    var pos = camera.position.clone().add(dir.multiplyScalar(distance));\r\n\r\n    pointer.position.x = pos.x;\r\n    pointer.position.y = pos.y\r\n    pointer.position.z=8;\r\n   // console.log(pointer.position)\r\n    _Control_js__WEBPACK_IMPORTED_MODULE_2__.setVector(pointer.position);\r\n\r\n}\r\n\r\nfunction projectVector(object) {\r\n\r\n    var width = docWidth,\r\n        height = docHeight;\r\n    var widthHalf = width / 2,\r\n        heightHalf = height / 2;\r\n\r\n    let vector = object.position.clone();\r\n    vector.z += 30\r\n    //vector.applyMatrix4(object.matrixWorld);\r\n    vector.project(camera)\r\n\r\n    //var projector = new THREE.Projector();\r\n    //projector.projectVector( vector.setFromMatrixPosition( object.matrixWorld ), camera );\r\n\r\n    vector.x = (vector.x * widthHalf) + widthHalf;\r\n    vector.y = -(vector.y * heightHalf) + heightHalf;\r\n    return vector;\r\n\r\n}\r\n\r\n\r\nvar specterMaterial\r\n\r\nfunction initCustomMaterial() {\r\n\r\n    var meshphysical_frag = `\r\n    #define STANDARD\r\n#ifdef PHYSICAL\r\n    #define REFLECTIVITY\r\n    #define CLEARCOAT\r\n    #define TRANSPARENCY\r\n#endif\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n#ifdef TRANSPARENCY\r\n    uniform float transparency;\r\n#endif\r\n#ifdef REFLECTIVITY\r\n    uniform float reflectivity;\r\n#endif\r\n#ifdef CLEARCOAT\r\n    uniform float clearcoat;\r\n    uniform float clearcoatRoughness;\r\n#endif\r\n#ifdef USE_SHEEN\r\n    uniform vec3 sheen;\r\n#endif\r\nvarying vec3 vViewPosition;\r\n#ifndef FLAT_SHADED\r\n    varying vec3 vNormal;\r\n    #ifdef USE_TANGENT\r\n        varying vec3 vTangent;\r\n        varying vec3 vBitangent;\r\n    #endif\r\n#endif\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <bsdfs>\r\n#include <cube_uv_reflection_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_physical_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <lights_pars_begin>\r\n#include <lights_physical_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\nvoid main() {\r\n    #include <clipping_planes_fragment>\r\n    vec4 diffuseColor = vec4( diffuse, opacity );\r\n    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n    vec3 totalEmissiveRadiance = emissive;\r\n    #include <logdepthbuf_fragment>\r\n    #include <map_fragment>\r\n    #include <color_fragment>\r\n    #include <alphamap_fragment>\r\n    #include <alphatest_fragment>\r\n    #include <roughnessmap_fragment>\r\n    #include <metalnessmap_fragment>\r\n    #include <normal_fragment_begin>\r\n    #include <normal_fragment_maps>\r\n    #include <clearcoat_normal_fragment_begin>\r\n    #include <clearcoat_normal_fragment_maps>\r\n    #include <emissivemap_fragment>\r\n    #include <lights_physical_fragment>\r\n    #include <lights_fragment_begin>\r\n    #include <lights_fragment_maps>\r\n    #include <lights_fragment_end>\r\n    #include <aomap_fragment>\r\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n    #ifdef TRANSPARENCY\r\n        diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\r\n    #endif\r\n    gl_FragColor = vec4( outgoingLight,1.-(((0.2125 * outgoingLight.r) + (0.7154 * outgoingLight.g) + (0.0721 * outgoingLight.b)) ) );\r\n    #include <tonemapping_fragment>\r\n    #include <encodings_fragment>\r\n    #include <fog_fragment>\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <dithering_fragment>\r\n}`\r\n\r\n    //gl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n\r\n\r\n    /*\r\n    #ifdef USE_COLOR\r\n                if(vColor==vec3(0,0,1))\r\n                    diffuseColor.rgb *= vec3(1,0,0);\r\n                else\r\n                    diffuseColor.rgb *= vColor;\r\n        #endif*/\r\n\r\n    //    #include <color_vertex>\r\n\r\n    var meshphysical_vert = `#define STANDARD\r\nvarying vec3 vViewPosition;\r\n#ifndef FLAT_SHADED\r\n    varying vec3 vNormal;\r\n    #ifdef USE_TANGENT\r\n        varying vec3 vTangent;\r\n        varying vec3 vBitangent;\r\n    #endif\r\n#endif\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nuniform vec3 shirt;\r\nuniform vec3 wind;\r\n\r\nvoid main() {\r\n    #include <uv_vertex>\r\n    #include <uv2_vertex>\r\n    #ifdef USE_COLOR\r\n        if(color==vec3(0,0,1))\r\n            vColor.xyz = shirt;\r\n        else\r\n            vColor.xyz = color.xyz;\r\n        \r\n    #endif\r\n    #include <beginnormal_vertex>\r\n    #include <morphnormal_vertex>\r\n    #include <skinbase_vertex>\r\n    #include <skinnormal_vertex>\r\n    #include <defaultnormal_vertex>\r\n#ifndef FLAT_SHADED\r\n    vNormal = normalize( transformedNormal );\r\n    #ifdef USE_TANGENT\r\n        vTangent = normalize( transformedTangent );\r\n        vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\r\n    #endif\r\n#endif\r\n    #include <begin_vertex>\r\n    #include <morphtarget_vertex>\r\n    #include <skinning_vertex>\r\n    #include <displacementmap_vertex>\r\n\r\n    \r\n        if(color==vec3(1,0,0)){\r\n            float val=max(0.0, 1.0976 - transformed.z);\r\n            transformed.xyz+=val*wind;\r\n            transformed.y*=1.0+sin((wind.z+transformed.z)*4.0)/2.0;\r\n\r\n        }\r\n    \r\n\r\n    #include <project_vertex>\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n    vViewPosition = - mvPosition.xyz;\r\n    #include <worldpos_vertex>\r\n    #include <shadowmap_vertex>\r\n    #include <fog_vertex>\r\n}`\r\n\r\n    var uniforms = _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.UniformsUtils.merge(\r\n        [_lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderLib.standard.uniforms,\r\n            //{shirt: {value:new THREE.Vector3(0,1,0)},\r\n            //wind: {value:new THREE.Vector3(0,0,0)}}\r\n        ]\r\n    );\r\n\r\n    /*specterMaterial =  new THREE.ShaderMaterial({\r\n    uniforms: uniforms,\r\n    fragmentShader: fragmentShader(),\r\n    vertexShader: vertexShader(),\r\n  })**/\r\n\r\n\r\n    specterMaterial = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial({\r\n        uniforms: uniforms,\r\n        derivatives: false,\r\n        lights: true,\r\n        vertexColors: true,\r\n        vertexShader: meshphysical_vert,\r\n        fragmentShader: meshphysical_frag,\r\n        roughness: 0.0,\r\n        metalness: 1.0,\r\n        //vertexShader: THREE.ShaderChunk.cube_vert,\r\n        //fragmentShader: THREE.ShaderChunk.cube_frag\r\n    });\r\n\r\n}\r\n/////SCENE///////\r\n\r\nvar emptyScene;\r\nvar scenes;\r\n\r\n\r\n\r\nfunction sceneInit() {\r\n    emptyScene = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Scene();\r\n    scenes = [];\r\n\r\n    let cubeGeometry = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BoxBufferGeometry(20, 20, 20);\r\n    let cubeMaterial = new _lib_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshStandardMaterial({ color: 0xff8833 }); //map: texture\r\n\r\n    /*\r\n      var geometry = new THREE.SphereGeometry( 5, 32, 32 );\r\n      var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\r\n      var sphere = new THREE.Mesh( geometry, material );\r\n\r\n      sphere.position.set(0,0,-30);\r\n      cubes.push(sphere);\r\n      scenes[2].add(sphere);\r\n      var geo = new THREE.OctahedronGeometry( 30, 1 );\r\n      var mat = new THREE.MeshBasicMaterial( {color: 0xC92DD1} ); \r\n      var octa= new THREE.Mesh( geo, mat );\r\n      octa.position.set(0,0,20);\r\n      cubes.push(octa);\r\n      scenes[3].add(octa);*/\r\n}\r\n\r\n\r\n\r\nfunction flipScene(i) {\r\n    activeScene = i;\r\n}\r\nvar activeScene = 0;\r\nvar activeModule;\r\n/*\r\nfunction getScene() {\r\n    let index = activeScene;\r\n    let scene = scenes[index];\r\n    if(scene == undefined) {\r\n        scene = emptyScene\r\n        scenes[index] = 'pend';\r\n\r\n        //wow this is a conufsing mess but it's functional!\r\n        let importerFunction = SCENE_IMPORT[index];\r\n        if(importerFunction) {\r\n            Main.pendApp(index)\r\n            importerFunction(module => {\r\n                scenes[index] = [module.init(index,()=>{Main.clearPendApp(index)},Main.apps[index]), module]\r\n                \r\n            });\r\n        } else {\r\n            scenes[index] = [emptyScene, undefined]\r\n        }\r\n\r\n    \r\n    } else if(scene == 'pend') {\r\n        scene = emptyScene;\r\n    } else {\r\n        activeModule = scene[1]; //define the module that's currently active so we can run it's animate function in sceneAnimate()\r\n        scene = scene[0] //please forgive me, trust me it works\r\n    }\r\n\r\n    return scene;\r\n}*/\r\n\r\n///////////////\r\n\r\nfunction setClearColor(a,b){\r\n    renderer.setClearColor(a,b);\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://buup/./src/Render.js?");

/***/ })

},
0,[["./src/Main.js","runtime","libs"]]]);